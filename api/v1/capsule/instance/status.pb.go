// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: api/v1/capsule/instance/status.proto

package instance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Different states a stage can be in.
type StageState int32

const (
	// Unspecified state.
	StageState_STAGE_STATE_UNSPECIFIED StageState = 0
	// Stage is ongoing.
	StageState_STAGE_STATE_ONGOING StageState = 1
	// Stage has failed.
	StageState_STAGE_STATE_FAILED StageState = 2
	// Stage is done.
	StageState_STAGE_STATE_DONE StageState = 3
	// Stage is running.
	StageState_STAGE_STATE_RUNNING StageState = 4
)

// Enum value maps for StageState.
var (
	StageState_name = map[int32]string{
		0: "STAGE_STATE_UNSPECIFIED",
		1: "STAGE_STATE_ONGOING",
		2: "STAGE_STATE_FAILED",
		3: "STAGE_STATE_DONE",
		4: "STAGE_STATE_RUNNING",
	}
	StageState_value = map[string]int32{
		"STAGE_STATE_UNSPECIFIED": 0,
		"STAGE_STATE_ONGOING":     1,
		"STAGE_STATE_FAILED":      2,
		"STAGE_STATE_DONE":        3,
		"STAGE_STATE_RUNNING":     4,
	}
)

func (x StageState) Enum() *StageState {
	p := new(StageState)
	*p = x
	return p
}

func (x StageState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StageState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[0].Descriptor()
}

func (StageState) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[0]
}

func (x StageState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StageState.Descriptor instead.
func (StageState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{0}
}

type ContainerType int32

const (
	ContainerType_CONTAINER_TYPE_UNSPECIFIED ContainerType = 0
	ContainerType_CONTAINER_TYPE_MAIN        ContainerType = 1
	ContainerType_CONTAINER_TYPE_SIDECAR     ContainerType = 2
	ContainerType_CONTAINER_TYPE_INIT        ContainerType = 3
)

// Enum value maps for ContainerType.
var (
	ContainerType_name = map[int32]string{
		0: "CONTAINER_TYPE_UNSPECIFIED",
		1: "CONTAINER_TYPE_MAIN",
		2: "CONTAINER_TYPE_SIDECAR",
		3: "CONTAINER_TYPE_INIT",
	}
	ContainerType_value = map[string]int32{
		"CONTAINER_TYPE_UNSPECIFIED": 0,
		"CONTAINER_TYPE_MAIN":        1,
		"CONTAINER_TYPE_SIDECAR":     2,
		"CONTAINER_TYPE_INIT":        3,
	}
)

func (x ContainerType) Enum() *ContainerType {
	p := new(ContainerType)
	*p = x
	return p
}

func (x ContainerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[1].Descriptor()
}

func (ContainerType) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[1]
}

func (x ContainerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerType.Descriptor instead.
func (ContainerType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{1}
}

// Different states a step can be in.
type StepState int32

const (
	// Unspecified state.
	StepState_STEP_STATE_UNSPECIFIED StepState = 0
	// Step is ongoing.
	StepState_STEP_STATE_ONGOING StepState = 1
	// Step has failed.
	StepState_STEP_STATE_FAILED StepState = 2
	// Step is done.
	StepState_STEP_STATE_DONE StepState = 3
	// Step is running.
	StepState_STEP_STATE_RUNNING StepState = 4
)

// Enum value maps for StepState.
var (
	StepState_name = map[int32]string{
		0: "STEP_STATE_UNSPECIFIED",
		1: "STEP_STATE_ONGOING",
		2: "STEP_STATE_FAILED",
		3: "STEP_STATE_DONE",
		4: "STEP_STATE_RUNNING",
	}
	StepState_value = map[string]int32{
		"STEP_STATE_UNSPECIFIED": 0,
		"STEP_STATE_ONGOING":     1,
		"STEP_STATE_FAILED":      2,
		"STEP_STATE_DONE":        3,
		"STEP_STATE_RUNNING":     4,
	}
)

func (x StepState) Enum() *StepState {
	p := new(StepState)
	*p = x
	return p
}

func (x StepState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StepState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[2].Descriptor()
}

func (StepState) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[2]
}

func (x StepState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StepState.Descriptor instead.
func (StepState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{2}
}

// Different states of a placement step
type PlacementState int32

const (
	// Unspecified state.
	PlacementState_SCHEDULING_STATE_UNSPECIFIED PlacementState = 0
	// If the instance is unschedulable.
	PlacementState_SCHEDULING_STATE_UNSCHEDULEABLE PlacementState = 1
	// If the instance is scheduled.
	PlacementState_SCHEDULING_STATE_DONE PlacementState = 2
)

// Enum value maps for PlacementState.
var (
	PlacementState_name = map[int32]string{
		0: "SCHEDULING_STATE_UNSPECIFIED",
		1: "SCHEDULING_STATE_UNSCHEDULEABLE",
		2: "SCHEDULING_STATE_DONE",
	}
	PlacementState_value = map[string]int32{
		"SCHEDULING_STATE_UNSPECIFIED":    0,
		"SCHEDULING_STATE_UNSCHEDULEABLE": 1,
		"SCHEDULING_STATE_DONE":           2,
	}
)

func (x PlacementState) Enum() *PlacementState {
	p := new(PlacementState)
	*p = x
	return p
}

func (x PlacementState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlacementState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[3].Descriptor()
}

func (PlacementState) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[3]
}

func (x PlacementState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlacementState.Descriptor instead.
func (PlacementState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{3}
}

// Different states of an image pulling step.
type ImagePullingState int32

const (
	// Unspecified state.
	ImagePullingState_IMAGE_PULLING_STATE_UNSPECIFIED ImagePullingState = 0
	// Image is being pulled.
	ImagePullingState_IMAGE_PULLING_STATE_PULLING ImagePullingState = 1
	// Image pulling has failed.
	ImagePullingState_IMAGE_PULLING_STATE_ERROR ImagePullingState = 2
	// Image pulling is in back off.
	ImagePullingState_IMAGE_PULLING_STATE_BACK_OFF ImagePullingState = 3
	// Image pulling is done.
	ImagePullingState_IMAGE_PULLING_STATE_DONE ImagePullingState = 4
)

// Enum value maps for ImagePullingState.
var (
	ImagePullingState_name = map[int32]string{
		0: "IMAGE_PULLING_STATE_UNSPECIFIED",
		1: "IMAGE_PULLING_STATE_PULLING",
		2: "IMAGE_PULLING_STATE_ERROR",
		3: "IMAGE_PULLING_STATE_BACK_OFF",
		4: "IMAGE_PULLING_STATE_DONE",
	}
	ImagePullingState_value = map[string]int32{
		"IMAGE_PULLING_STATE_UNSPECIFIED": 0,
		"IMAGE_PULLING_STATE_PULLING":     1,
		"IMAGE_PULLING_STATE_ERROR":       2,
		"IMAGE_PULLING_STATE_BACK_OFF":    3,
		"IMAGE_PULLING_STATE_DONE":        4,
	}
)

func (x ImagePullingState) Enum() *ImagePullingState {
	p := new(ImagePullingState)
	*p = x
	return p
}

func (x ImagePullingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImagePullingState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[4].Descriptor()
}

func (ImagePullingState) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[4]
}

func (x ImagePullingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImagePullingState.Descriptor instead.
func (ImagePullingState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{4}
}

// Different states of a ready step.
type ReadyState int32

const (
	// Unspecified state.
	ReadyState_READY_STATE_UNSPECIFIED ReadyState = 0
	// If the instance is in crash loop backoff.
	ReadyState_READY_STATE_CRASH_LOOP_BACKOFF ReadyState = 1
	// If the instance is not ready.
	ReadyState_READY_STATE_NOT_READY ReadyState = 2
	// If the instance is ready.
	ReadyState_READY_STATE_READY ReadyState = 3
)

// Enum value maps for ReadyState.
var (
	ReadyState_name = map[int32]string{
		0: "READY_STATE_UNSPECIFIED",
		1: "READY_STATE_CRASH_LOOP_BACKOFF",
		2: "READY_STATE_NOT_READY",
		3: "READY_STATE_READY",
	}
	ReadyState_value = map[string]int32{
		"READY_STATE_UNSPECIFIED":        0,
		"READY_STATE_CRASH_LOOP_BACKOFF": 1,
		"READY_STATE_NOT_READY":          2,
		"READY_STATE_READY":              3,
	}
)

func (x ReadyState) Enum() *ReadyState {
	p := new(ReadyState)
	*p = x
	return p
}

func (x ReadyState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadyState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[5].Descriptor()
}

func (ReadyState) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[5]
}

func (x ReadyState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadyState.Descriptor instead.
func (ReadyState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{5}
}

// Status is a representation of the current state of an instance.
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instance ID.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Stages of the instance.
	Stages *Stages `protobuf:"bytes,2,opt,name=stages,proto3" json:"stages,omitempty"`
	// Rollout ID.
	RolloutId uint64 `protobuf:"varint,3,opt,name=rollout_id,json=rolloutId,proto3" json:"rollout_id,omitempty"`
	// Image of the instance.
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Creation time of the instance.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Status) GetStages() *Stages {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *Status) GetRolloutId() uint64 {
	if x != nil {
		return x.RolloutId
	}
	return 0
}

func (x *Status) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Status) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// The different stages of the instance.
type Stages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Scheduling stage.
	Schedule *SchedulingStage `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// Preparing stage.
	Preparing *PreparingStage `protobuf:"bytes,2,opt,name=preparing,proto3" json:"preparing,omitempty"`
	// Running stage.
	Running *RunningStage `protobuf:"bytes,3,opt,name=running,proto3" json:"running,omitempty"`
	// Deleted stage.
	Deleted *DeletedStage `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *Stages) Reset() {
	*x = Stages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stages) ProtoMessage() {}

func (x *Stages) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stages.ProtoReflect.Descriptor instead.
func (*Stages) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{1}
}

func (x *Stages) GetSchedule() *SchedulingStage {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *Stages) GetPreparing() *PreparingStage {
	if x != nil {
		return x.Preparing
	}
	return nil
}

func (x *Stages) GetRunning() *RunningStage {
	if x != nil {
		return x.Running
	}
	return nil
}

func (x *Stages) GetDeleted() *DeletedStage {
	if x != nil {
		return x.Deleted
	}
	return nil
}

// Meta information about a stage.
type StageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the stage.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Last update time of the stage.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// State of the stage.
	State StageState `protobuf:"varint,3,opt,name=state,proto3,enum=api.v1.capsule.instance.StageState" json:"state,omitempty"`
}

func (x *StageInfo) Reset() {
	*x = StageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInfo) ProtoMessage() {}

func (x *StageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInfo.ProtoReflect.Descriptor instead.
func (*StageInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{2}
}

func (x *StageInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StageInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StageInfo) GetState() StageState {
	if x != nil {
		return x.State
	}
	return StageState_STAGE_STATE_UNSPECIFIED
}

// The scheduling stage.
type SchedulingStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the stage.
	Info *StageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// Steps of the stage.
	Steps []*SchedulingStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *SchedulingStage) Reset() {
	*x = SchedulingStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingStage) ProtoMessage() {}

func (x *SchedulingStage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingStage.ProtoReflect.Descriptor instead.
func (*SchedulingStage) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{3}
}

func (x *SchedulingStage) GetInfo() *StageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SchedulingStage) GetSteps() []*SchedulingStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

// A step of the scheduling stage.
type SchedulingStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//
	//	*SchedulingStep_Generic
	//	*SchedulingStep_Placement
	Step isSchedulingStep_Step `protobuf_oneof:"step"`
}

func (x *SchedulingStep) Reset() {
	*x = SchedulingStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingStep) ProtoMessage() {}

func (x *SchedulingStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingStep.ProtoReflect.Descriptor instead.
func (*SchedulingStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{4}
}

func (m *SchedulingStep) GetStep() isSchedulingStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *SchedulingStep) GetGeneric() *GenericStep {
	if x, ok := x.GetStep().(*SchedulingStep_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *SchedulingStep) GetPlacement() *PlacementStep {
	if x, ok := x.GetStep().(*SchedulingStep_Placement); ok {
		return x.Placement
	}
	return nil
}

type isSchedulingStep_Step interface {
	isSchedulingStep_Step()
}

type SchedulingStep_Generic struct {
	// Generic step.
	Generic *GenericStep `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type SchedulingStep_Placement struct {
	// Placement step - On what node should the instance run.
	Placement *PlacementStep `protobuf:"bytes,2,opt,name=placement,proto3,oneof"`
}

func (*SchedulingStep_Generic) isSchedulingStep_Step() {}

func (*SchedulingStep_Placement) isSchedulingStep_Step() {}

// Placement step.
type PlacementStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the step.
	Info *StepInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// Node on which the instance should run.
	Node string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *PlacementStep) Reset() {
	*x = PlacementStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementStep) ProtoMessage() {}

func (x *PlacementStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementStep.ProtoReflect.Descriptor instead.
func (*PlacementStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{5}
}

func (x *PlacementStep) GetInfo() *StepInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PlacementStep) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// A generic step.
type GenericStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *StepInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GenericStep) Reset() {
	*x = GenericStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericStep) ProtoMessage() {}

func (x *GenericStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericStep.ProtoReflect.Descriptor instead.
func (*GenericStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{6}
}

func (x *GenericStep) GetInfo() *StepInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Meta data about a step.
type StepInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the step.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Message of the step.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Last update time of the step.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// State of the step.
	State StepState `protobuf:"varint,4,opt,name=state,proto3,enum=api.v1.capsule.instance.StepState" json:"state,omitempty"`
	// Information about the container associated with the step.
	Container *ContainerInfo `protobuf:"bytes,5,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *StepInfo) Reset() {
	*x = StepInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepInfo) ProtoMessage() {}

func (x *StepInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepInfo.ProtoReflect.Descriptor instead.
func (*StepInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{7}
}

func (x *StepInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StepInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StepInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StepInfo) GetState() StepState {
	if x != nil {
		return x.State
	}
	return StepState_STEP_STATE_UNSPECIFIED
}

func (x *StepInfo) GetContainer() *ContainerInfo {
	if x != nil {
		return x.Container
	}
	return nil
}

type ContainerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type ContainerType `protobuf:"varint,2,opt,name=type,proto3,enum=api.v1.capsule.instance.ContainerType" json:"type,omitempty"`
}

func (x *ContainerInfo) Reset() {
	*x = ContainerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInfo) ProtoMessage() {}

func (x *ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInfo.ProtoReflect.Descriptor instead.
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{8}
}

func (x *ContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInfo) GetType() ContainerType {
	if x != nil {
		return x.Type
	}
	return ContainerType_CONTAINER_TYPE_UNSPECIFIED
}

// The preparing stage
type PreparingStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the stage.
	Info *StageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// Steps of the stage.
	Steps []*PreparingStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *PreparingStage) Reset() {
	*x = PreparingStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparingStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparingStage) ProtoMessage() {}

func (x *PreparingStage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparingStage.ProtoReflect.Descriptor instead.
func (*PreparingStage) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{9}
}

func (x *PreparingStage) GetInfo() *StageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PreparingStage) GetSteps() []*PreparingStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

// A step of the preparing stage.
type PreparingStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//
	//	*PreparingStep_Generic
	//	*PreparingStep_ImagePulling
	//	*PreparingStep_InitExecuting
	Step isPreparingStep_Step `protobuf_oneof:"step"`
}

func (x *PreparingStep) Reset() {
	*x = PreparingStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreparingStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreparingStep) ProtoMessage() {}

func (x *PreparingStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreparingStep.ProtoReflect.Descriptor instead.
func (*PreparingStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{10}
}

func (m *PreparingStep) GetStep() isPreparingStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *PreparingStep) GetGeneric() *GenericStep {
	if x, ok := x.GetStep().(*PreparingStep_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *PreparingStep) GetImagePulling() *ImagePullingStep {
	if x, ok := x.GetStep().(*PreparingStep_ImagePulling); ok {
		return x.ImagePulling
	}
	return nil
}

func (x *PreparingStep) GetInitExecuting() *ExecutingStep {
	if x, ok := x.GetStep().(*PreparingStep_InitExecuting); ok {
		return x.InitExecuting
	}
	return nil
}

type isPreparingStep_Step interface {
	isPreparingStep_Step()
}

type PreparingStep_Generic struct {
	// Generic step.
	Generic *GenericStep `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type PreparingStep_ImagePulling struct {
	// Image pulling step.
	ImagePulling *ImagePullingStep `protobuf:"bytes,2,opt,name=image_pulling,json=imagePulling,proto3,oneof"`
}

type PreparingStep_InitExecuting struct {
	// Executing step for init containers
	InitExecuting *ExecutingStep `protobuf:"bytes,3,opt,name=init_executing,json=initExecuting,proto3,oneof"`
}

func (*PreparingStep_Generic) isPreparingStep_Step() {}

func (*PreparingStep_ImagePulling) isPreparingStep_Step() {}

func (*PreparingStep_InitExecuting) isPreparingStep_Step() {}

// An image pulling step of the preparing stage.
type ImagePullingStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the step.
	Info *StepInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// State of the step.
	State ImagePullingState `protobuf:"varint,2,opt,name=state,proto3,enum=api.v1.capsule.instance.ImagePullingState" json:"state,omitempty"`
	// Image that is being pulled.
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImagePullingStep) Reset() {
	*x = ImagePullingStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePullingStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullingStep) ProtoMessage() {}

func (x *ImagePullingStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullingStep.ProtoReflect.Descriptor instead.
func (*ImagePullingStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{11}
}

func (x *ImagePullingStep) GetInfo() *StepInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ImagePullingStep) GetState() ImagePullingState {
	if x != nil {
		return x.State
	}
	return ImagePullingState_IMAGE_PULLING_STATE_UNSPECIFIED
}

func (x *ImagePullingStep) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

// The running stage of the instance
type RunningStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the stage.
	Info *StageInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// Steps of the stage.
	Steps []*RunningStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	// Number of restarts of the instance.
	Restarts uint32 `protobuf:"varint,3,opt,name=restarts,proto3" json:"restarts,omitempty"`
	// Information about the last container termination.
	LastContainerTermination *ContainerTermination `protobuf:"bytes,4,opt,name=last_container_termination,json=lastContainerTermination,proto3" json:"last_container_termination,omitempty"`
}

func (x *RunningStage) Reset() {
	*x = RunningStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningStage) ProtoMessage() {}

func (x *RunningStage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningStage.ProtoReflect.Descriptor instead.
func (*RunningStage) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{12}
}

func (x *RunningStage) GetInfo() *StageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RunningStage) GetSteps() []*RunningStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *RunningStage) GetRestarts() uint32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *RunningStage) GetLastContainerTermination() *ContainerTermination {
	if x != nil {
		return x.LastContainerTermination
	}
	return nil
}

// A step of the running stage.
type RunningStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//
	//	*RunningStep_Generic
	//	*RunningStep_Ready
	//	*RunningStep_Executing
	Step isRunningStep_Step `protobuf_oneof:"step"`
}

func (x *RunningStep) Reset() {
	*x = RunningStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningStep) ProtoMessage() {}

func (x *RunningStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningStep.ProtoReflect.Descriptor instead.
func (*RunningStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{13}
}

func (m *RunningStep) GetStep() isRunningStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *RunningStep) GetGeneric() *GenericStep {
	if x, ok := x.GetStep().(*RunningStep_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *RunningStep) GetReady() *ReadyStep {
	if x, ok := x.GetStep().(*RunningStep_Ready); ok {
		return x.Ready
	}
	return nil
}

func (x *RunningStep) GetExecuting() *ExecutingStep {
	if x, ok := x.GetStep().(*RunningStep_Executing); ok {
		return x.Executing
	}
	return nil
}

type isRunningStep_Step interface {
	isRunningStep_Step()
}

type RunningStep_Generic struct {
	// Generic step.
	Generic *GenericStep `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type RunningStep_Ready struct {
	// Ready step.
	Ready *ReadyStep `protobuf:"bytes,2,opt,name=ready,proto3,oneof"`
}

type RunningStep_Executing struct {
	// Executing step.
	Executing *ExecutingStep `protobuf:"bytes,3,opt,name=executing,proto3,oneof"`
}

func (*RunningStep_Generic) isRunningStep_Step() {}

func (*RunningStep_Ready) isRunningStep_Step() {}

func (*RunningStep_Executing) isRunningStep_Step() {}

// A ready step of the running stage.
type ReadyStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the step.
	Info *StepInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// State of the step.
	State ReadyState `protobuf:"varint,2,opt,name=state,proto3,enum=api.v1.capsule.instance.ReadyState" json:"state,omitempty"`
	// Time at which the step failed.
	FailedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=failed_at,json=failedAt,proto3" json:"failed_at,omitempty"`
	// Number of times the step has failed.
	FailCount uint32 `protobuf:"varint,4,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
}

func (x *ReadyStep) Reset() {
	*x = ReadyStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyStep) ProtoMessage() {}

func (x *ReadyStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyStep.ProtoReflect.Descriptor instead.
func (*ReadyStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{14}
}

func (x *ReadyStep) GetInfo() *StepInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReadyStep) GetState() ReadyState {
	if x != nil {
		return x.State
	}
	return ReadyState_READY_STATE_UNSPECIFIED
}

func (x *ReadyStep) GetFailedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FailedAt
	}
	return nil
}

func (x *ReadyStep) GetFailCount() uint32 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

// An executing step of the running stage.
type ExecutingStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Meta information about the step.
	Info *StepInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// Time at which the step started.
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Time at which the step finished.
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Number of restarts of the container
	Restarts uint32 `protobuf:"varint,4,opt,name=restarts,proto3" json:"restarts,omitempty"`
	// Information about the last container termination.
	LastContainerTermination *ContainerTermination `protobuf:"bytes,5,opt,name=last_container_termination,json=lastContainerTermination,proto3" json:"last_container_termination,omitempty"`
}

func (x *ExecutingStep) Reset() {
	*x = ExecutingStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutingStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutingStep) ProtoMessage() {}

func (x *ExecutingStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutingStep.ProtoReflect.Descriptor instead.
func (*ExecutingStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{15}
}

func (x *ExecutingStep) GetInfo() *StepInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ExecutingStep) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExecutingStep) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *ExecutingStep) GetRestarts() uint32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *ExecutingStep) GetLastContainerTermination() *ContainerTermination {
	if x != nil {
		return x.LastContainerTermination
	}
	return nil
}

// Information about the last container termination.
type ContainerTermination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exit status from the last termination of the container
	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Signal from the last termination of the container
	// +optional
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
	// (brief) reason from the last termination of the container
	// +optional
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message regarding the last termination of the container
	// +optional
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Time at which previous execution of the container started
	// +optional
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Time at which the container last terminated
	// +optional
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Container's ID in the format 'type://container_id'
	// +optional
	ContainerId string `protobuf:"bytes,7,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *ContainerTermination) Reset() {
	*x = ContainerTermination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerTermination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerTermination) ProtoMessage() {}

func (x *ContainerTermination) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerTermination.ProtoReflect.Descriptor instead.
func (*ContainerTermination) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{16}
}

func (x *ContainerTermination) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerTermination) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *ContainerTermination) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerTermination) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContainerTermination) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ContainerTermination) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *ContainerTermination) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DeletedStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *StageInfo     `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Steps []*DeletedStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *DeletedStage) Reset() {
	*x = DeletedStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedStage) ProtoMessage() {}

func (x *DeletedStage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedStage.ProtoReflect.Descriptor instead.
func (*DeletedStage) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{17}
}

func (x *DeletedStage) GetInfo() *StageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DeletedStage) GetSteps() []*DeletedStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type DeletedStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Step:
	//
	//	*DeletedStep_Generic
	Step isDeletedStep_Step `protobuf_oneof:"step"`
}

func (x *DeletedStep) Reset() {
	*x = DeletedStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedStep) ProtoMessage() {}

func (x *DeletedStep) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedStep.ProtoReflect.Descriptor instead.
func (*DeletedStep) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{18}
}

func (m *DeletedStep) GetStep() isDeletedStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (x *DeletedStep) GetGeneric() *GenericStep {
	if x, ok := x.GetStep().(*DeletedStep_Generic); ok {
		return x.Generic
	}
	return nil
}

type isDeletedStep_Step interface {
	isDeletedStep_Step()
}

type DeletedStep_Generic struct {
	Generic *GenericStep `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

func (*DeletedStep_Generic) isDeletedStep_Step() {}

var File_api_v1_capsule_instance_status_proto protoreflect.FileDescriptor

var file_api_v1_capsule_instance_status_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd2, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x44, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a,
	0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3f,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x46, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x06, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x5a, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x08, 0x53, 0x74,
	0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22,
	0x5f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x0d, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x74,
	0x65, 0x70, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x50, 0x0a,
	0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x48,
	0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x4f, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x48,
	0x00, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x35, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x8b, 0x02, 0x0a,
	0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x6b, 0x0a,
	0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x01, 0x0a, 0x0b, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x74, 0x65,
	0x70, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x3a, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x65, 0x70, 0x48,
	0x00, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x46, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0xd5, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x53, 0x74, 0x65, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc7, 0x02, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x6b, 0x0a,
	0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x02, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3a,
	0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x57, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x74, 0x65, 0x70,
	0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x2a, 0x89, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x47,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a,
	0x7d, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45,
	0x43, 0x41, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x83,
	0x01, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x54, 0x45, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x45, 0x50,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x45, 0x50, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x45, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x2a, 0x72, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x2a, 0xb8, 0x01, 0x0a, 0x11, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x1f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55,
	0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x5f,
	0x4f, 0x46, 0x46, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50,
	0x55, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e,
	0x45, 0x10, 0x04, 0x2a, 0x7f, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22,
	0x0a, 0x1e, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x52,
	0x41, 0x53, 0x48, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4f, 0x46, 0x46,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x10, 0x03, 0x42, 0xe0, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x69, 0x67, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x69, 0x67, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xa2, 0x02, 0x04, 0x41, 0x56, 0x43, 0x49,
	0xaa, 0x02, 0x17, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xca, 0x02, 0x17, 0x41, 0x70, 0x69,
	0x5c, 0x56, 0x31, 0x5c, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x5c, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0xe2, 0x02, 0x23, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x43, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x5c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x70, 0x69,
	0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_capsule_instance_status_proto_rawDescOnce sync.Once
	file_api_v1_capsule_instance_status_proto_rawDescData = file_api_v1_capsule_instance_status_proto_rawDesc
)

func file_api_v1_capsule_instance_status_proto_rawDescGZIP() []byte {
	file_api_v1_capsule_instance_status_proto_rawDescOnce.Do(func() {
		file_api_v1_capsule_instance_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_capsule_instance_status_proto_rawDescData)
	})
	return file_api_v1_capsule_instance_status_proto_rawDescData
}

var file_api_v1_capsule_instance_status_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_v1_capsule_instance_status_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_v1_capsule_instance_status_proto_goTypes = []interface{}{
	(StageState)(0),               // 0: api.v1.capsule.instance.StageState
	(ContainerType)(0),            // 1: api.v1.capsule.instance.ContainerType
	(StepState)(0),                // 2: api.v1.capsule.instance.StepState
	(PlacementState)(0),           // 3: api.v1.capsule.instance.PlacementState
	(ImagePullingState)(0),        // 4: api.v1.capsule.instance.ImagePullingState
	(ReadyState)(0),               // 5: api.v1.capsule.instance.ReadyState
	(*Status)(nil),                // 6: api.v1.capsule.instance.Status
	(*Stages)(nil),                // 7: api.v1.capsule.instance.Stages
	(*StageInfo)(nil),             // 8: api.v1.capsule.instance.StageInfo
	(*SchedulingStage)(nil),       // 9: api.v1.capsule.instance.SchedulingStage
	(*SchedulingStep)(nil),        // 10: api.v1.capsule.instance.SchedulingStep
	(*PlacementStep)(nil),         // 11: api.v1.capsule.instance.PlacementStep
	(*GenericStep)(nil),           // 12: api.v1.capsule.instance.GenericStep
	(*StepInfo)(nil),              // 13: api.v1.capsule.instance.StepInfo
	(*ContainerInfo)(nil),         // 14: api.v1.capsule.instance.ContainerInfo
	(*PreparingStage)(nil),        // 15: api.v1.capsule.instance.PreparingStage
	(*PreparingStep)(nil),         // 16: api.v1.capsule.instance.PreparingStep
	(*ImagePullingStep)(nil),      // 17: api.v1.capsule.instance.ImagePullingStep
	(*RunningStage)(nil),          // 18: api.v1.capsule.instance.RunningStage
	(*RunningStep)(nil),           // 19: api.v1.capsule.instance.RunningStep
	(*ReadyStep)(nil),             // 20: api.v1.capsule.instance.ReadyStep
	(*ExecutingStep)(nil),         // 21: api.v1.capsule.instance.ExecutingStep
	(*ContainerTermination)(nil),  // 22: api.v1.capsule.instance.ContainerTermination
	(*DeletedStage)(nil),          // 23: api.v1.capsule.instance.DeletedStage
	(*DeletedStep)(nil),           // 24: api.v1.capsule.instance.DeletedStep
	(*timestamppb.Timestamp)(nil), // 25: google.protobuf.Timestamp
}
var file_api_v1_capsule_instance_status_proto_depIdxs = []int32{
	7,  // 0: api.v1.capsule.instance.Status.stages:type_name -> api.v1.capsule.instance.Stages
	25, // 1: api.v1.capsule.instance.Status.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: api.v1.capsule.instance.Stages.schedule:type_name -> api.v1.capsule.instance.SchedulingStage
	15, // 3: api.v1.capsule.instance.Stages.preparing:type_name -> api.v1.capsule.instance.PreparingStage
	18, // 4: api.v1.capsule.instance.Stages.running:type_name -> api.v1.capsule.instance.RunningStage
	23, // 5: api.v1.capsule.instance.Stages.deleted:type_name -> api.v1.capsule.instance.DeletedStage
	25, // 6: api.v1.capsule.instance.StageInfo.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 7: api.v1.capsule.instance.StageInfo.state:type_name -> api.v1.capsule.instance.StageState
	8,  // 8: api.v1.capsule.instance.SchedulingStage.info:type_name -> api.v1.capsule.instance.StageInfo
	10, // 9: api.v1.capsule.instance.SchedulingStage.steps:type_name -> api.v1.capsule.instance.SchedulingStep
	12, // 10: api.v1.capsule.instance.SchedulingStep.generic:type_name -> api.v1.capsule.instance.GenericStep
	11, // 11: api.v1.capsule.instance.SchedulingStep.placement:type_name -> api.v1.capsule.instance.PlacementStep
	13, // 12: api.v1.capsule.instance.PlacementStep.info:type_name -> api.v1.capsule.instance.StepInfo
	13, // 13: api.v1.capsule.instance.GenericStep.info:type_name -> api.v1.capsule.instance.StepInfo
	25, // 14: api.v1.capsule.instance.StepInfo.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 15: api.v1.capsule.instance.StepInfo.state:type_name -> api.v1.capsule.instance.StepState
	14, // 16: api.v1.capsule.instance.StepInfo.container:type_name -> api.v1.capsule.instance.ContainerInfo
	1,  // 17: api.v1.capsule.instance.ContainerInfo.type:type_name -> api.v1.capsule.instance.ContainerType
	8,  // 18: api.v1.capsule.instance.PreparingStage.info:type_name -> api.v1.capsule.instance.StageInfo
	16, // 19: api.v1.capsule.instance.PreparingStage.steps:type_name -> api.v1.capsule.instance.PreparingStep
	12, // 20: api.v1.capsule.instance.PreparingStep.generic:type_name -> api.v1.capsule.instance.GenericStep
	17, // 21: api.v1.capsule.instance.PreparingStep.image_pulling:type_name -> api.v1.capsule.instance.ImagePullingStep
	21, // 22: api.v1.capsule.instance.PreparingStep.init_executing:type_name -> api.v1.capsule.instance.ExecutingStep
	13, // 23: api.v1.capsule.instance.ImagePullingStep.info:type_name -> api.v1.capsule.instance.StepInfo
	4,  // 24: api.v1.capsule.instance.ImagePullingStep.state:type_name -> api.v1.capsule.instance.ImagePullingState
	8,  // 25: api.v1.capsule.instance.RunningStage.info:type_name -> api.v1.capsule.instance.StageInfo
	19, // 26: api.v1.capsule.instance.RunningStage.steps:type_name -> api.v1.capsule.instance.RunningStep
	22, // 27: api.v1.capsule.instance.RunningStage.last_container_termination:type_name -> api.v1.capsule.instance.ContainerTermination
	12, // 28: api.v1.capsule.instance.RunningStep.generic:type_name -> api.v1.capsule.instance.GenericStep
	20, // 29: api.v1.capsule.instance.RunningStep.ready:type_name -> api.v1.capsule.instance.ReadyStep
	21, // 30: api.v1.capsule.instance.RunningStep.executing:type_name -> api.v1.capsule.instance.ExecutingStep
	13, // 31: api.v1.capsule.instance.ReadyStep.info:type_name -> api.v1.capsule.instance.StepInfo
	5,  // 32: api.v1.capsule.instance.ReadyStep.state:type_name -> api.v1.capsule.instance.ReadyState
	25, // 33: api.v1.capsule.instance.ReadyStep.failed_at:type_name -> google.protobuf.Timestamp
	13, // 34: api.v1.capsule.instance.ExecutingStep.info:type_name -> api.v1.capsule.instance.StepInfo
	25, // 35: api.v1.capsule.instance.ExecutingStep.started_at:type_name -> google.protobuf.Timestamp
	25, // 36: api.v1.capsule.instance.ExecutingStep.finished_at:type_name -> google.protobuf.Timestamp
	22, // 37: api.v1.capsule.instance.ExecutingStep.last_container_termination:type_name -> api.v1.capsule.instance.ContainerTermination
	25, // 38: api.v1.capsule.instance.ContainerTermination.started_at:type_name -> google.protobuf.Timestamp
	25, // 39: api.v1.capsule.instance.ContainerTermination.finished_at:type_name -> google.protobuf.Timestamp
	8,  // 40: api.v1.capsule.instance.DeletedStage.info:type_name -> api.v1.capsule.instance.StageInfo
	24, // 41: api.v1.capsule.instance.DeletedStage.steps:type_name -> api.v1.capsule.instance.DeletedStep
	12, // 42: api.v1.capsule.instance.DeletedStep.generic:type_name -> api.v1.capsule.instance.GenericStep
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_api_v1_capsule_instance_status_proto_init() }
func file_api_v1_capsule_instance_status_proto_init() {
	if File_api_v1_capsule_instance_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_capsule_instance_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlacementStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparingStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreparingStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePullingStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutingStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerTermination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_capsule_instance_status_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SchedulingStep_Generic)(nil),
		(*SchedulingStep_Placement)(nil),
	}
	file_api_v1_capsule_instance_status_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*PreparingStep_Generic)(nil),
		(*PreparingStep_ImagePulling)(nil),
		(*PreparingStep_InitExecuting)(nil),
	}
	file_api_v1_capsule_instance_status_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*RunningStep_Generic)(nil),
		(*RunningStep_Ready)(nil),
		(*RunningStep_Executing)(nil),
	}
	file_api_v1_capsule_instance_status_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*DeletedStep_Generic)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_capsule_instance_status_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_capsule_instance_status_proto_goTypes,
		DependencyIndexes: file_api_v1_capsule_instance_status_proto_depIdxs,
		EnumInfos:         file_api_v1_capsule_instance_status_proto_enumTypes,
		MessageInfos:      file_api_v1_capsule_instance_status_proto_msgTypes,
	}.Build()
	File_api_v1_capsule_instance_status_proto = out.File
	file_api_v1_capsule_instance_status_proto_rawDesc = nil
	file_api_v1_capsule_instance_status_proto_goTypes = nil
	file_api_v1_capsule_instance_status_proto_depIdxs = nil
}
