// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: api/v1/capsule/instance/status.proto

package instance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StateStatus int32

const (
	StateStatus_STATE_STATUS_UNSPECIFIED StateStatus = 0
	StateStatus_STATE_STATUS_ONGOING     StateStatus = 1
	StateStatus_STATE_STATUS_FAILED      StateStatus = 2
	StateStatus_STATE_STATUS_DONE        StateStatus = 3
)

// Enum value maps for StateStatus.
var (
	StateStatus_name = map[int32]string{
		0: "STATE_STATUS_UNSPECIFIED",
		1: "STATE_STATUS_ONGOING",
		2: "STATE_STATUS_FAILED",
		3: "STATE_STATUS_DONE",
	}
	StateStatus_value = map[string]int32{
		"STATE_STATUS_UNSPECIFIED": 0,
		"STATE_STATUS_ONGOING":     1,
		"STATE_STATUS_FAILED":      2,
		"STATE_STATUS_DONE":        3,
	}
)

func (x StateStatus) Enum() *StateStatus {
	p := new(StateStatus)
	*p = x
	return p
}

func (x StateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[0].Descriptor()
}

func (StateStatus) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[0]
}

func (x StateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateStatus.Descriptor instead.
func (StateStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{0}
}

type StateID int32

const (
	StateID_STATE_ID_UNSPECIFIED            StateID = 0
	StateID_STATE_ID_SCHEDULING             StateID = 1
	StateID_STATE_ID_PREPARING              StateID = 2
	StateID_STATE_ID_RUNNING                StateID = 3
	StateID_STATE_ID_UNSCHEDULEABLE         StateID = 4
	StateID_STATE_ID_SCHEDULING_DONE        StateID = 5
	StateID_STATE_ID_IMAGE_PULLING          StateID = 6
	StateID_STATE_ID_IMAGE_PULLING_ERROR    StateID = 7
	StateID_STATE_ID_IMAGE_PULLING_BACK_OFF StateID = 8
	StateID_STATE_ID_IMAGE_PULLING_DONE     StateID = 9
	StateID_STATE_ID_CRASH_LOOP_BACK_OFF    StateID = 10
	StateID_STATE_ID_WAITING                StateID = 11
	StateID_STATE_ID_RUNNING_RUNNING        StateID = 12
)

// Enum value maps for StateID.
var (
	StateID_name = map[int32]string{
		0:  "STATE_ID_UNSPECIFIED",
		1:  "STATE_ID_SCHEDULING",
		2:  "STATE_ID_PREPARING",
		3:  "STATE_ID_RUNNING",
		4:  "STATE_ID_UNSCHEDULEABLE",
		5:  "STATE_ID_SCHEDULING_DONE",
		6:  "STATE_ID_IMAGE_PULLING",
		7:  "STATE_ID_IMAGE_PULLING_ERROR",
		8:  "STATE_ID_IMAGE_PULLING_BACK_OFF",
		9:  "STATE_ID_IMAGE_PULLING_DONE",
		10: "STATE_ID_CRASH_LOOP_BACK_OFF",
		11: "STATE_ID_WAITING",
		12: "STATE_ID_RUNNING_RUNNING",
	}
	StateID_value = map[string]int32{
		"STATE_ID_UNSPECIFIED":            0,
		"STATE_ID_SCHEDULING":             1,
		"STATE_ID_PREPARING":              2,
		"STATE_ID_RUNNING":                3,
		"STATE_ID_UNSCHEDULEABLE":         4,
		"STATE_ID_SCHEDULING_DONE":        5,
		"STATE_ID_IMAGE_PULLING":          6,
		"STATE_ID_IMAGE_PULLING_ERROR":    7,
		"STATE_ID_IMAGE_PULLING_BACK_OFF": 8,
		"STATE_ID_IMAGE_PULLING_DONE":     9,
		"STATE_ID_CRASH_LOOP_BACK_OFF":    10,
		"STATE_ID_WAITING":                11,
		"STATE_ID_RUNNING_RUNNING":        12,
	}
)

func (x StateID) Enum() *StateID {
	p := new(StateID)
	*p = x
	return p
}

func (x StateID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateID) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[1].Descriptor()
}

func (StateID) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[1]
}

func (x StateID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateID.Descriptor instead.
func (StateID) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{1}
}

type StateMachineID int32

const (
	StateMachineID_STATE_MACHINE_ID_UNSPECIFIED   StateMachineID = 0
	StateMachineID_STATE_MACHINE_ID_BASE          StateMachineID = 1
	StateMachineID_STATE_MACHINE_ID_SCHEDULING    StateMachineID = 2
	StateMachineID_STATE_MACHINE_ID_IMAGE_PULLING StateMachineID = 3
	StateMachineID_STATE_MACHINE_ID_RUNNING       StateMachineID = 4
)

// Enum value maps for StateMachineID.
var (
	StateMachineID_name = map[int32]string{
		0: "STATE_MACHINE_ID_UNSPECIFIED",
		1: "STATE_MACHINE_ID_BASE",
		2: "STATE_MACHINE_ID_SCHEDULING",
		3: "STATE_MACHINE_ID_IMAGE_PULLING",
		4: "STATE_MACHINE_ID_RUNNING",
	}
	StateMachineID_value = map[string]int32{
		"STATE_MACHINE_ID_UNSPECIFIED":   0,
		"STATE_MACHINE_ID_BASE":          1,
		"STATE_MACHINE_ID_SCHEDULING":    2,
		"STATE_MACHINE_ID_IMAGE_PULLING": 3,
		"STATE_MACHINE_ID_RUNNING":       4,
	}
)

func (x StateMachineID) Enum() *StateMachineID {
	p := new(StateMachineID)
	*p = x
	return p
}

func (x StateMachineID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateMachineID) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_capsule_instance_status_proto_enumTypes[2].Descriptor()
}

func (StateMachineID) Type() protoreflect.EnumType {
	return &file_api_v1_capsule_instance_status_proto_enumTypes[2]
}

func (x StateMachineID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateMachineID.Descriptor instead.
func (StateMachineID) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{2}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string        `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	StateMachine *StateMachine `protobuf:"bytes,2,opt,name=state_machine,json=stateMachine,proto3" json:"state_machine,omitempty"`
	Data         *Data         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Status) GetStateMachine() *StateMachine {
	if x != nil {
		return x.StateMachine
	}
	return nil
}

func (x *Status) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               StateID         `protobuf:"varint,1,opt,name=id,proto3,enum=api.v1.capsule.instance.StateID" json:"id,omitempty"`
	Status           StateStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=api.v1.capsule.instance.StateStatus" json:"status,omitempty"`
	Message          string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamps       *Timestamps     `protobuf:"bytes,4,opt,name=timestamps,proto3" json:"timestamps,omitempty"`
	SubStateMachines []*StateMachine `protobuf:"bytes,5,rep,name=sub_state_machines,json=subStateMachines,proto3" json:"sub_state_machines,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetId() StateID {
	if x != nil {
		return x.Id
	}
	return StateID_STATE_ID_UNSPECIFIED
}

func (x *State) GetStatus() StateStatus {
	if x != nil {
		return x.Status
	}
	return StateStatus_STATE_STATUS_UNSPECIFIED
}

func (x *State) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *State) GetTimestamps() *Timestamps {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *State) GetSubStateMachines() []*StateMachine {
	if x != nil {
		return x.SubStateMachines
	}
	return nil
}

type StateMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     StateMachineID `protobuf:"varint,1,opt,name=id,proto3,enum=api.v1.capsule.instance.StateMachineID" json:"id,omitempty"`
	Status StateStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=api.v1.capsule.instance.StateStatus" json:"status,omitempty"`
	States []*State       `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *StateMachine) Reset() {
	*x = StateMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMachine) ProtoMessage() {}

func (x *StateMachine) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMachine.ProtoReflect.Descriptor instead.
func (*StateMachine) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{2}
}

func (x *StateMachine) GetId() StateMachineID {
	if x != nil {
		return x.Id
	}
	return StateMachineID_STATE_MACHINE_ID_UNSPECIFIED
}

func (x *StateMachine) GetStatus() StateStatus {
	if x != nil {
		return x.Status
	}
	return StateStatus_STATE_STATUS_UNSPECIFIED
}

func (x *StateMachine) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

type Timestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entered *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=entered,proto3" json:"entered,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Exited  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=exited,proto3" json:"exited,omitempty"`
}

func (x *Timestamps) Reset() {
	*x = Timestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamps) ProtoMessage() {}

func (x *Timestamps) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamps.ProtoReflect.Descriptor instead.
func (*Timestamps) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{3}
}

func (x *Timestamps) GetEntered() *timestamppb.Timestamp {
	if x != nil {
		return x.Entered
	}
	return nil
}

func (x *Timestamps) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Timestamps) GetExited() *timestamppb.Timestamp {
	if x != nil {
		return x.Exited
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLevel         *TopLevelData         `protobuf:"bytes,1,opt,name=top_level,json=topLevel,proto3" json:"top_level,omitempty"`
	Running          *RunningData          `protobuf:"bytes,2,opt,name=running,proto3" json:"running,omitempty"`
	CrashLoopBackOff *CrashLoopBackOffData `protobuf:"bytes,3,opt,name=crash_loop_back_off,json=crashLoopBackOff,proto3" json:"crash_loop_back_off,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetTopLevel() *TopLevelData {
	if x != nil {
		return x.TopLevel
	}
	return nil
}

func (x *Data) GetRunning() *RunningData {
	if x != nil {
		return x.Running
	}
	return nil
}

func (x *Data) GetCrashLoopBackOff() *CrashLoopBackOffData {
	if x != nil {
		return x.CrashLoopBackOff
	}
	return nil
}

type TopLevelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RolloutId uint64                 `protobuf:"varint,1,opt,name=rollout_id,json=rolloutId,proto3" json:"rollout_id,omitempty"`
	Image     string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Node      string                 `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TopLevelData) Reset() {
	*x = TopLevelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopLevelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopLevelData) ProtoMessage() {}

func (x *TopLevelData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopLevelData.ProtoReflect.Descriptor instead.
func (*TopLevelData) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{5}
}

func (x *TopLevelData) GetRolloutId() uint64 {
	if x != nil {
		return x.RolloutId
	}
	return 0
}

func (x *TopLevelData) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TopLevelData) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *TopLevelData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RunningData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restarts uint32 `protobuf:"varint,1,opt,name=restarts,proto3" json:"restarts,omitempty"`
}

func (x *RunningData) Reset() {
	*x = RunningData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningData) ProtoMessage() {}

func (x *RunningData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningData.ProtoReflect.Descriptor instead.
func (*RunningData) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{6}
}

func (x *RunningData) GetRestarts() uint32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

type CrashLoopBackOffData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Termination *ContainerTermination `protobuf:"bytes,1,opt,name=termination,proto3" json:"termination,omitempty"`
}

func (x *CrashLoopBackOffData) Reset() {
	*x = CrashLoopBackOffData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrashLoopBackOffData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrashLoopBackOffData) ProtoMessage() {}

func (x *CrashLoopBackOffData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrashLoopBackOffData.ProtoReflect.Descriptor instead.
func (*CrashLoopBackOffData) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{7}
}

func (x *CrashLoopBackOffData) GetTermination() *ContainerTermination {
	if x != nil {
		return x.Termination
	}
	return nil
}

type ContainerTermination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exit status from the last termination of the container
	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Signal from the last termination of the container
	// +optional
	Signal int32 `protobuf:"varint,2,opt,name=signal,proto3" json:"signal,omitempty"`
	// (brief) reason from the last termination of the container
	// +optional
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Message regarding the last termination of the container
	// +optional
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Time at which previous execution of the container started
	// +optional
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// Time at which the container last terminated
	// +optional
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// Container's ID in the format '<type>://<container_id>'
	// +optional
	ContainerId string `protobuf:"bytes,7,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *ContainerTermination) Reset() {
	*x = ContainerTermination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_capsule_instance_status_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerTermination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerTermination) ProtoMessage() {}

func (x *ContainerTermination) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_capsule_instance_status_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerTermination.ProtoReflect.Descriptor instead.
func (*ContainerTermination) Descriptor() ([]byte, []int) {
	return file_api_v1_capsule_instance_status_proto_rawDescGZIP(), []int{8}
}

func (x *ContainerTermination) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerTermination) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *ContainerTermination) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerTermination) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContainerTermination) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ContainerTermination) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *ContainerTermination) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

var File_api_v1_capsule_instance_status_proto protoreflect.FileDescriptor

var file_api_v1_capsule_instance_status_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa8, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0d,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x02, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x43, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x10, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x37, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x06, 0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61,
	0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54,
	0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x74, 0x6f, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x13, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x6c,
	0x6f, 0x6f, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x61,
	0x73, 0x68, 0x4c, 0x6f, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x63, 0x72, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b,
	0x4f, 0x66, 0x66, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x22, 0x67, 0x0a, 0x14, 0x43, 0x72, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x6f, 0x70,
	0x42, 0x61, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0b, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x02, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x75, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x2a, 0xff,
	0x02, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49,
	0x44, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x49, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x5f,
	0x44, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x49, 0x4e, 0x47,
	0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49,
	0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44,
	0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x42,
	0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c,
	0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x41, 0x53, 0x48, 0x5f, 0x4c, 0x4f, 0x4f,
	0x50, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0c,
	0x2a, 0xb0, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x43,
	0x48, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d,
	0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e,
	0x45, 0x5f, 0x49, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49,
	0x4e, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d,
	0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x04, 0x42, 0xe0, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72,
	0x69, 0x67, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x69, 0x67, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xa2, 0x02, 0x04, 0x41, 0x56, 0x43, 0x49, 0xaa,
	0x02, 0x17, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0xca, 0x02, 0x17, 0x41, 0x70, 0x69, 0x5c,
	0x56, 0x31, 0x5c, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x5c, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0xe2, 0x02, 0x23, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x43, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x65, 0x5c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x41, 0x70, 0x69, 0x3a,
	0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_capsule_instance_status_proto_rawDescOnce sync.Once
	file_api_v1_capsule_instance_status_proto_rawDescData = file_api_v1_capsule_instance_status_proto_rawDesc
)

func file_api_v1_capsule_instance_status_proto_rawDescGZIP() []byte {
	file_api_v1_capsule_instance_status_proto_rawDescOnce.Do(func() {
		file_api_v1_capsule_instance_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_capsule_instance_status_proto_rawDescData)
	})
	return file_api_v1_capsule_instance_status_proto_rawDescData
}

var file_api_v1_capsule_instance_status_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_capsule_instance_status_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_capsule_instance_status_proto_goTypes = []interface{}{
	(StateStatus)(0),              // 0: api.v1.capsule.instance.StateStatus
	(StateID)(0),                  // 1: api.v1.capsule.instance.StateID
	(StateMachineID)(0),           // 2: api.v1.capsule.instance.StateMachineID
	(*Status)(nil),                // 3: api.v1.capsule.instance.Status
	(*State)(nil),                 // 4: api.v1.capsule.instance.State
	(*StateMachine)(nil),          // 5: api.v1.capsule.instance.StateMachine
	(*Timestamps)(nil),            // 6: api.v1.capsule.instance.Timestamps
	(*Data)(nil),                  // 7: api.v1.capsule.instance.Data
	(*TopLevelData)(nil),          // 8: api.v1.capsule.instance.TopLevelData
	(*RunningData)(nil),           // 9: api.v1.capsule.instance.RunningData
	(*CrashLoopBackOffData)(nil),  // 10: api.v1.capsule.instance.CrashLoopBackOffData
	(*ContainerTermination)(nil),  // 11: api.v1.capsule.instance.ContainerTermination
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_api_v1_capsule_instance_status_proto_depIdxs = []int32{
	5,  // 0: api.v1.capsule.instance.Status.state_machine:type_name -> api.v1.capsule.instance.StateMachine
	7,  // 1: api.v1.capsule.instance.Status.data:type_name -> api.v1.capsule.instance.Data
	1,  // 2: api.v1.capsule.instance.State.id:type_name -> api.v1.capsule.instance.StateID
	0,  // 3: api.v1.capsule.instance.State.status:type_name -> api.v1.capsule.instance.StateStatus
	6,  // 4: api.v1.capsule.instance.State.timestamps:type_name -> api.v1.capsule.instance.Timestamps
	5,  // 5: api.v1.capsule.instance.State.sub_state_machines:type_name -> api.v1.capsule.instance.StateMachine
	2,  // 6: api.v1.capsule.instance.StateMachine.id:type_name -> api.v1.capsule.instance.StateMachineID
	0,  // 7: api.v1.capsule.instance.StateMachine.status:type_name -> api.v1.capsule.instance.StateStatus
	4,  // 8: api.v1.capsule.instance.StateMachine.states:type_name -> api.v1.capsule.instance.State
	12, // 9: api.v1.capsule.instance.Timestamps.entered:type_name -> google.protobuf.Timestamp
	12, // 10: api.v1.capsule.instance.Timestamps.updated:type_name -> google.protobuf.Timestamp
	12, // 11: api.v1.capsule.instance.Timestamps.exited:type_name -> google.protobuf.Timestamp
	8,  // 12: api.v1.capsule.instance.Data.top_level:type_name -> api.v1.capsule.instance.TopLevelData
	9,  // 13: api.v1.capsule.instance.Data.running:type_name -> api.v1.capsule.instance.RunningData
	10, // 14: api.v1.capsule.instance.Data.crash_loop_back_off:type_name -> api.v1.capsule.instance.CrashLoopBackOffData
	12, // 15: api.v1.capsule.instance.TopLevelData.created_at:type_name -> google.protobuf.Timestamp
	11, // 16: api.v1.capsule.instance.CrashLoopBackOffData.termination:type_name -> api.v1.capsule.instance.ContainerTermination
	12, // 17: api.v1.capsule.instance.ContainerTermination.started_at:type_name -> google.protobuf.Timestamp
	12, // 18: api.v1.capsule.instance.ContainerTermination.finished_at:type_name -> google.protobuf.Timestamp
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_v1_capsule_instance_status_proto_init() }
func file_api_v1_capsule_instance_status_proto_init() {
	if File_api_v1_capsule_instance_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_capsule_instance_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopLevelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrashLoopBackOffData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_capsule_instance_status_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerTermination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_capsule_instance_status_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_capsule_instance_status_proto_goTypes,
		DependencyIndexes: file_api_v1_capsule_instance_status_proto_depIdxs,
		EnumInfos:         file_api_v1_capsule_instance_status_proto_enumTypes,
		MessageInfos:      file_api_v1_capsule_instance_status_proto_msgTypes,
	}.Build()
	File_api_v1_capsule_instance_status_proto = out.File
	file_api_v1_capsule_instance_status_proto_rawDesc = nil
	file_api_v1_capsule_instance_status_proto_goTypes = nil
	file_api_v1_capsule_instance_status_proto_depIdxs = nil
}
