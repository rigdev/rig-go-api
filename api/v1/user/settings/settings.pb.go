// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/v1/user/settings/settings.proto

package settings

import (
	model "github.com/rigdev/rig-go-api/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The different template types.
type TemplateType int32

const (
	// Unspecified template type.
	TemplateType_TEMPLATE_TYPE_UNSPECIFIED TemplateType = 0
	// The welcome email template.
	TemplateType_TEMPLATE_TYPE_WELCOME_EMAIL TemplateType = 1
	// The email verification template.
	TemplateType_TEMPLATE_TYPE_EMAIL_VERIFICATION TemplateType = 2
	// The reset password email template.
	TemplateType_TEMPLATE_TYPE_EMAIL_RESET_PASSWORD TemplateType = 3
	TemplateType_TEMPLATE_TYPE_WELCOME_TEXT         TemplateType = 4 // Deprecated: Text is not supported - The welcome text template.
	// Deprecated: Text is not supported - The text verification template.
	TemplateType_TEMPLATE_TYPE_TEXT_VERIFICATION TemplateType = 5
	// Deprecated: Text is not supported - The reset password text template.
	TemplateType_TEMPLATE_TYPE_TEXT_RESET_PASSWORD TemplateType = 6
)

// Enum value maps for TemplateType.
var (
	TemplateType_name = map[int32]string{
		0: "TEMPLATE_TYPE_UNSPECIFIED",
		1: "TEMPLATE_TYPE_WELCOME_EMAIL",
		2: "TEMPLATE_TYPE_EMAIL_VERIFICATION",
		3: "TEMPLATE_TYPE_EMAIL_RESET_PASSWORD",
		4: "TEMPLATE_TYPE_WELCOME_TEXT",
		5: "TEMPLATE_TYPE_TEXT_VERIFICATION",
		6: "TEMPLATE_TYPE_TEXT_RESET_PASSWORD",
	}
	TemplateType_value = map[string]int32{
		"TEMPLATE_TYPE_UNSPECIFIED":          0,
		"TEMPLATE_TYPE_WELCOME_EMAIL":        1,
		"TEMPLATE_TYPE_EMAIL_VERIFICATION":   2,
		"TEMPLATE_TYPE_EMAIL_RESET_PASSWORD": 3,
		"TEMPLATE_TYPE_WELCOME_TEXT":         4,
		"TEMPLATE_TYPE_TEXT_VERIFICATION":    5,
		"TEMPLATE_TYPE_TEXT_RESET_PASSWORD":  6,
	}
)

func (x TemplateType) Enum() *TemplateType {
	p := new(TemplateType)
	*p = x
	return p
}

func (x TemplateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_user_settings_settings_proto_enumTypes[0].Descriptor()
}

func (TemplateType) Type() protoreflect.EnumType {
	return &file_api_v1_user_settings_settings_proto_enumTypes[0]
}

func (x TemplateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateType.Descriptor instead.
func (TemplateType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{0}
}

// Update message for updating users settings.
type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A oneof field for the different settings fields.
	//
	// Types that are assignable to Field:
	//
	//	*Update_AllowRegister
	//	*Update_IsVerifiedEmailRequired
	//	*Update_IsVerifiedPhoneRequired
	//	*Update_AccessTokenTtl
	//	*Update_RefreshTokenTtl
	//	*Update_VerificationCodeTtl
	//	*Update_PasswordHashing
	//	*Update_LoginMechanisms_
	//	*Update_EmailProvider
	//	*Update_TextProvider
	//	*Update_Template
	Field isUpdate_Field `protobuf_oneof:"field"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{0}
}

func (m *Update) GetField() isUpdate_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *Update) GetAllowRegister() bool {
	if x, ok := x.GetField().(*Update_AllowRegister); ok {
		return x.AllowRegister
	}
	return false
}

func (x *Update) GetIsVerifiedEmailRequired() bool {
	if x, ok := x.GetField().(*Update_IsVerifiedEmailRequired); ok {
		return x.IsVerifiedEmailRequired
	}
	return false
}

func (x *Update) GetIsVerifiedPhoneRequired() bool {
	if x, ok := x.GetField().(*Update_IsVerifiedPhoneRequired); ok {
		return x.IsVerifiedPhoneRequired
	}
	return false
}

func (x *Update) GetAccessTokenTtl() *durationpb.Duration {
	if x, ok := x.GetField().(*Update_AccessTokenTtl); ok {
		return x.AccessTokenTtl
	}
	return nil
}

func (x *Update) GetRefreshTokenTtl() *durationpb.Duration {
	if x, ok := x.GetField().(*Update_RefreshTokenTtl); ok {
		return x.RefreshTokenTtl
	}
	return nil
}

func (x *Update) GetVerificationCodeTtl() *durationpb.Duration {
	if x, ok := x.GetField().(*Update_VerificationCodeTtl); ok {
		return x.VerificationCodeTtl
	}
	return nil
}

func (x *Update) GetPasswordHashing() *model.HashingConfig {
	if x, ok := x.GetField().(*Update_PasswordHashing); ok {
		return x.PasswordHashing
	}
	return nil
}

func (x *Update) GetLoginMechanisms() *Update_LoginMechanisms {
	if x, ok := x.GetField().(*Update_LoginMechanisms_); ok {
		return x.LoginMechanisms
	}
	return nil
}

func (x *Update) GetEmailProvider() *EmailProvider {
	if x, ok := x.GetField().(*Update_EmailProvider); ok {
		return x.EmailProvider
	}
	return nil
}

func (x *Update) GetTextProvider() *TextProvider {
	if x, ok := x.GetField().(*Update_TextProvider); ok {
		return x.TextProvider
	}
	return nil
}

func (x *Update) GetTemplate() *Template {
	if x, ok := x.GetField().(*Update_Template); ok {
		return x.Template
	}
	return nil
}

type isUpdate_Field interface {
	isUpdate_Field()
}

type Update_AllowRegister struct {
	// If true, users can self register.
	AllowRegister bool `protobuf:"varint,1,opt,name=allow_register,json=allowRegister,proto3,oneof"`
}

type Update_IsVerifiedEmailRequired struct {
	// If true, users must be verified via email to login.
	IsVerifiedEmailRequired bool `protobuf:"varint,2,opt,name=is_verified_email_required,json=isVerifiedEmailRequired,proto3,oneof"`
}

type Update_IsVerifiedPhoneRequired struct {
	// If true, users must be verified via phone to login.
	IsVerifiedPhoneRequired bool `protobuf:"varint,3,opt,name=is_verified_phone_required,json=isVerifiedPhoneRequired,proto3,oneof"`
}

type Update_AccessTokenTtl struct {
	// Access token Time to Live.
	AccessTokenTtl *durationpb.Duration `protobuf:"bytes,4,opt,name=access_token_ttl,json=accessTokenTtl,proto3,oneof"`
}

type Update_RefreshTokenTtl struct {
	// Refresh token Time to Live.
	RefreshTokenTtl *durationpb.Duration `protobuf:"bytes,5,opt,name=refresh_token_ttl,json=refreshTokenTtl,proto3,oneof"`
}

type Update_VerificationCodeTtl struct {
	// Verification code Time to Live.
	VerificationCodeTtl *durationpb.Duration `protobuf:"bytes,6,opt,name=verification_code_ttl,json=verificationCodeTtl,proto3,oneof"`
}

type Update_PasswordHashing struct {
	// The hashing config used to hash passwords.
	PasswordHashing *model.HashingConfig `protobuf:"bytes,7,opt,name=password_hashing,json=passwordHashing,proto3,oneof"`
}

type Update_LoginMechanisms_ struct {
	// The allowed login mechanisms.
	LoginMechanisms *Update_LoginMechanisms `protobuf:"bytes,8,opt,name=login_mechanisms,json=loginMechanisms,proto3,oneof"`
}

type Update_EmailProvider struct {
	// The email provider.
	EmailProvider *EmailProvider `protobuf:"bytes,9,opt,name=email_provider,json=emailProvider,proto3,oneof"`
}

type Update_TextProvider struct {
	// The text provider.
	TextProvider *TextProvider `protobuf:"bytes,10,opt,name=text_provider,json=textProvider,proto3,oneof"`
}

type Update_Template struct {
	// The templates used for sending emails and texts.
	Template *Template `protobuf:"bytes,11,opt,name=template,proto3,oneof"`
}

func (*Update_AllowRegister) isUpdate_Field() {}

func (*Update_IsVerifiedEmailRequired) isUpdate_Field() {}

func (*Update_IsVerifiedPhoneRequired) isUpdate_Field() {}

func (*Update_AccessTokenTtl) isUpdate_Field() {}

func (*Update_RefreshTokenTtl) isUpdate_Field() {}

func (*Update_VerificationCodeTtl) isUpdate_Field() {}

func (*Update_PasswordHashing) isUpdate_Field() {}

func (*Update_LoginMechanisms_) isUpdate_Field() {}

func (*Update_EmailProvider) isUpdate_Field() {}

func (*Update_TextProvider) isUpdate_Field() {}

func (*Update_Template) isUpdate_Field() {}

// Message that tells how the user was registered / created.
type RegisterMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The method used to register a user.
	//
	// Types that are assignable to Method:
	//
	//	*RegisterMethod_System_
	//	*RegisterMethod_Signup_
	Method isRegisterMethod_Method `protobuf_oneof:"method"`
}

func (x *RegisterMethod) Reset() {
	*x = RegisterMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMethod) ProtoMessage() {}

func (x *RegisterMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMethod.ProtoReflect.Descriptor instead.
func (*RegisterMethod) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{1}
}

func (m *RegisterMethod) GetMethod() isRegisterMethod_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *RegisterMethod) GetSystem() *RegisterMethod_System {
	if x, ok := x.GetMethod().(*RegisterMethod_System_); ok {
		return x.System
	}
	return nil
}

func (x *RegisterMethod) GetSignup() *RegisterMethod_Signup {
	if x, ok := x.GetMethod().(*RegisterMethod_Signup_); ok {
		return x.Signup
	}
	return nil
}

type isRegisterMethod_Method interface {
	isRegisterMethod_Method()
}

type RegisterMethod_System_ struct {
	// The user was created by the system.
	System *RegisterMethod_System `protobuf:"bytes,1,opt,name=system,proto3,oneof"`
}

type RegisterMethod_Signup_ struct {
	// The user was self-registered with a login-type.
	Signup *RegisterMethod_Signup `protobuf:"bytes,2,opt,name=signup,proto3,oneof"`
}

func (*RegisterMethod_System_) isRegisterMethod_Method() {}

func (*RegisterMethod_Signup_) isRegisterMethod_Method() {}

// Message that tells how the user was authenticated.
type AuthMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Method:
	//
	//	*AuthMethod_LoginType
	Method isAuthMethod_Method `protobuf_oneof:"method"`
}

func (x *AuthMethod) Reset() {
	*x = AuthMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMethod) ProtoMessage() {}

func (x *AuthMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMethod.ProtoReflect.Descriptor instead.
func (*AuthMethod) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{2}
}

func (m *AuthMethod) GetMethod() isAuthMethod_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *AuthMethod) GetLoginType() model.LoginType {
	if x, ok := x.GetMethod().(*AuthMethod_LoginType); ok {
		return x.LoginType
	}
	return model.LoginType(0)
}

type isAuthMethod_Method interface {
	isAuthMethod_Method()
}

type AuthMethod_LoginType struct {
	LoginType model.LoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=model.LoginType,oneof"`
}

func (*AuthMethod_LoginType) isAuthMethod_Method() {}

// The users settings configuration. Settings of everything that has to do with
// users.
type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true, users can self register.
	AllowRegister bool `protobuf:"varint,1,opt,name=allow_register,json=allowRegister,proto3" json:"allow_register,omitempty"`
	// If true, users must be verified via email to login.
	IsVerifiedEmailRequired bool `protobuf:"varint,2,opt,name=is_verified_email_required,json=isVerifiedEmailRequired,proto3" json:"is_verified_email_required,omitempty"`
	// Deprecated: Text is not supported - If true, users must be verified via
	// phone to login.
	IsVerifiedPhoneRequired bool `protobuf:"varint,3,opt,name=is_verified_phone_required,json=isVerifiedPhoneRequired,proto3" json:"is_verified_phone_required,omitempty"`
	// Access token Time to Live.
	AccessTokenTtl *durationpb.Duration `protobuf:"bytes,4,opt,name=access_token_ttl,json=accessTokenTtl,proto3" json:"access_token_ttl,omitempty"`
	// Refresh token Time to Live.
	RefreshTokenTtl *durationpb.Duration `protobuf:"bytes,5,opt,name=refresh_token_ttl,json=refreshTokenTtl,proto3" json:"refresh_token_ttl,omitempty"`
	// Verification code Time to Live.
	VerificationCodeTtl *durationpb.Duration `protobuf:"bytes,6,opt,name=verification_code_ttl,json=verificationCodeTtl,proto3" json:"verification_code_ttl,omitempty"`
	// The hashing config used to hash passwords.
	PasswordHashing *model.HashingConfig `protobuf:"bytes,7,opt,name=password_hashing,json=passwordHashing,proto3" json:"password_hashing,omitempty"`
	// The allowed login mechanisms.
	LoginMechanisms []model.LoginType `protobuf:"varint,8,rep,packed,name=login_mechanisms,json=loginMechanisms,proto3,enum=model.LoginType" json:"login_mechanisms,omitempty"`
	// If true, send a welcome email to new users.
	SendWelcomeMail bool `protobuf:"varint,10,opt,name=send_welcome_mail,json=sendWelcomeMail,proto3" json:"send_welcome_mail,omitempty"`
	// The email provider.
	EmailProvider *EmailProviderEntry `protobuf:"bytes,11,opt,name=email_provider,json=emailProvider,proto3" json:"email_provider,omitempty"`
	// Deprecated: Text is not supported - The text provider.
	TextProvider *TextProviderEntry `protobuf:"bytes,12,opt,name=text_provider,json=textProvider,proto3" json:"text_provider,omitempty"`
	// The templates used for sending emails and texts.
	Templates *Templates `protobuf:"bytes,13,opt,name=templates,proto3" json:"templates,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{3}
}

func (x *Settings) GetAllowRegister() bool {
	if x != nil {
		return x.AllowRegister
	}
	return false
}

func (x *Settings) GetIsVerifiedEmailRequired() bool {
	if x != nil {
		return x.IsVerifiedEmailRequired
	}
	return false
}

func (x *Settings) GetIsVerifiedPhoneRequired() bool {
	if x != nil {
		return x.IsVerifiedPhoneRequired
	}
	return false
}

func (x *Settings) GetAccessTokenTtl() *durationpb.Duration {
	if x != nil {
		return x.AccessTokenTtl
	}
	return nil
}

func (x *Settings) GetRefreshTokenTtl() *durationpb.Duration {
	if x != nil {
		return x.RefreshTokenTtl
	}
	return nil
}

func (x *Settings) GetVerificationCodeTtl() *durationpb.Duration {
	if x != nil {
		return x.VerificationCodeTtl
	}
	return nil
}

func (x *Settings) GetPasswordHashing() *model.HashingConfig {
	if x != nil {
		return x.PasswordHashing
	}
	return nil
}

func (x *Settings) GetLoginMechanisms() []model.LoginType {
	if x != nil {
		return x.LoginMechanisms
	}
	return nil
}

func (x *Settings) GetSendWelcomeMail() bool {
	if x != nil {
		return x.SendWelcomeMail
	}
	return false
}

func (x *Settings) GetEmailProvider() *EmailProviderEntry {
	if x != nil {
		return x.EmailProvider
	}
	return nil
}

func (x *Settings) GetTextProvider() *TextProviderEntry {
	if x != nil {
		return x.TextProvider
	}
	return nil
}

func (x *Settings) GetTemplates() *Templates {
	if x != nil {
		return x.Templates
	}
	return nil
}

// Default email provider instance.
type DefaultInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultInstance) Reset() {
	*x = DefaultInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultInstance) ProtoMessage() {}

func (x *DefaultInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultInstance.ProtoReflect.Descriptor instead.
func (*DefaultInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{4}
}

// Mailjet email rpvoider instance.
type MailjetInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MailjetInstance) Reset() {
	*x = MailjetInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailjetInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailjetInstance) ProtoMessage() {}

func (x *MailjetInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailjetInstance.ProtoReflect.Descriptor instead.
func (*MailjetInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{5}
}

// Deprecated: Text is not supported - Default text provider instance.
type TwilioInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TwilioInstance) Reset() {
	*x = TwilioInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwilioInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwilioInstance) ProtoMessage() {}

func (x *TwilioInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwilioInstance.ProtoReflect.Descriptor instead.
func (*TwilioInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{6}
}

// SMTP email provider instance.
type SmtpInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Host of the smtp server.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port of the smtp server.
	Port int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *SmtpInstance) Reset() {
	*x = SmtpInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmtpInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmtpInstance) ProtoMessage() {}

func (x *SmtpInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmtpInstance.ProtoReflect.Descriptor instead.
func (*SmtpInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{7}
}

func (x *SmtpInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SmtpInstance) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Type of email instance in a provider.
type EmailInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Instance:
	//
	//	*EmailInstance_Default
	//	*EmailInstance_Mailjet
	//	*EmailInstance_Smtp
	Instance isEmailInstance_Instance `protobuf_oneof:"instance"`
}

func (x *EmailInstance) Reset() {
	*x = EmailInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailInstance) ProtoMessage() {}

func (x *EmailInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailInstance.ProtoReflect.Descriptor instead.
func (*EmailInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{8}
}

func (m *EmailInstance) GetInstance() isEmailInstance_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (x *EmailInstance) GetDefault() *DefaultInstance {
	if x, ok := x.GetInstance().(*EmailInstance_Default); ok {
		return x.Default
	}
	return nil
}

func (x *EmailInstance) GetMailjet() *MailjetInstance {
	if x, ok := x.GetInstance().(*EmailInstance_Mailjet); ok {
		return x.Mailjet
	}
	return nil
}

func (x *EmailInstance) GetSmtp() *SmtpInstance {
	if x, ok := x.GetInstance().(*EmailInstance_Smtp); ok {
		return x.Smtp
	}
	return nil
}

type isEmailInstance_Instance interface {
	isEmailInstance_Instance()
}

type EmailInstance_Default struct {
	// default from platform config.
	Default *DefaultInstance `protobuf:"bytes,1,opt,name=default,proto3,oneof"`
}

type EmailInstance_Mailjet struct {
	// Mailjet instance.
	Mailjet *MailjetInstance `protobuf:"bytes,2,opt,name=mailjet,proto3,oneof"`
}

type EmailInstance_Smtp struct {
	Smtp *SmtpInstance `protobuf:"bytes,3,opt,name=smtp,proto3,oneof"` // SMTP instance.
}

func (*EmailInstance_Default) isEmailInstance_Instance() {}

func (*EmailInstance_Mailjet) isEmailInstance_Instance() {}

func (*EmailInstance_Smtp) isEmailInstance_Instance() {}

// Deprecated: Text is not supported - Type of text instance in a provider.
type TextInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Instance:
	//
	//	*TextInstance_Default
	//	*TextInstance_Twilio
	Instance isTextInstance_Instance `protobuf_oneof:"instance"`
}

func (x *TextInstance) Reset() {
	*x = TextInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextInstance) ProtoMessage() {}

func (x *TextInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextInstance.ProtoReflect.Descriptor instead.
func (*TextInstance) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{9}
}

func (m *TextInstance) GetInstance() isTextInstance_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (x *TextInstance) GetDefault() *DefaultInstance {
	if x, ok := x.GetInstance().(*TextInstance_Default); ok {
		return x.Default
	}
	return nil
}

func (x *TextInstance) GetTwilio() *TwilioInstance {
	if x, ok := x.GetInstance().(*TextInstance_Twilio); ok {
		return x.Twilio
	}
	return nil
}

type isTextInstance_Instance interface {
	isTextInstance_Instance()
}

type TextInstance_Default struct {
	// default from platform config.
	Default *DefaultInstance `protobuf:"bytes,1,opt,name=default,proto3,oneof"`
}

type TextInstance_Twilio struct {
	// Twilio instance.
	Twilio *TwilioInstance `protobuf:"bytes,2,opt,name=twilio,proto3,oneof"`
}

func (*TextInstance_Default) isTextInstance_Instance() {}

func (*TextInstance_Twilio) isTextInstance_Instance() {}

// The email provider.
type EmailProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email-address that the provider sends emails from.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The credentials for the provider.
	Credentials *model.ProviderCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// The instance of the provider.
	Instance *EmailInstance `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *EmailProvider) Reset() {
	*x = EmailProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailProvider) ProtoMessage() {}

func (x *EmailProvider) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailProvider.ProtoReflect.Descriptor instead.
func (*EmailProvider) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{10}
}

func (x *EmailProvider) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EmailProvider) GetCredentials() *model.ProviderCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *EmailProvider) GetInstance() *EmailInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// an entry model for the email provider.
type EmailProviderEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email-address that the provider sends emails from.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The client id for the provider.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The secret id for the provider.
	SecretId string `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	// The instance of the provider.
	Instance *EmailInstance `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *EmailProviderEntry) Reset() {
	*x = EmailProviderEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailProviderEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailProviderEntry) ProtoMessage() {}

func (x *EmailProviderEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailProviderEntry.ProtoReflect.Descriptor instead.
func (*EmailProviderEntry) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{11}
}

func (x *EmailProviderEntry) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EmailProviderEntry) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *EmailProviderEntry) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *EmailProviderEntry) GetInstance() *EmailInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// Deprecated: Text is not supported - The text provider.
type TextProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number that the provider sends texts from.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The credentials for the provider.
	Credentials *model.ProviderCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Instance    *TextInstance              `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"` // The instance of the provider.
}

func (x *TextProvider) Reset() {
	*x = TextProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextProvider) ProtoMessage() {}

func (x *TextProvider) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextProvider.ProtoReflect.Descriptor instead.
func (*TextProvider) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{12}
}

func (x *TextProvider) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TextProvider) GetCredentials() *model.ProviderCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *TextProvider) GetInstance() *TextInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// Deprecated: Text is not supported - An entry model for the text provider.
type TextProviderEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number that the provider sends texts from.
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// The client id for the provider.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The secret id for the provider.
	SecretId string `protobuf:"bytes,3,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	// The instance of the provider.
	Instance *TextInstance `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *TextProviderEntry) Reset() {
	*x = TextProviderEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextProviderEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextProviderEntry) ProtoMessage() {}

func (x *TextProviderEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextProviderEntry.ProtoReflect.Descriptor instead.
func (*TextProviderEntry) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{13}
}

func (x *TextProviderEntry) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TextProviderEntry) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TextProviderEntry) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *TextProviderEntry) GetInstance() *TextInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

// A generic template model for sending emails and texts.
type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The body of the template.
	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The subject of the template.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// The type of the template.
	Type TemplateType `protobuf:"varint,3,opt,name=type,proto3,enum=api.v1.user.settings.TemplateType" json:"type,omitempty"`
	// The format of the template.
	Format []string `protobuf:"bytes,4,rep,name=format,proto3" json:"format,omitempty"`
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{14}
}

func (x *Template) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Template) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Template) GetType() TemplateType {
	if x != nil {
		return x.Type
	}
	return TemplateType_TEMPLATE_TYPE_UNSPECIFIED
}

func (x *Template) GetFormat() []string {
	if x != nil {
		return x.Format
	}
	return nil
}

type Templates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The welcome email template.
	WelcomeEmail *Template `protobuf:"bytes,1,opt,name=welcome_email,json=welcomeEmail,proto3" json:"welcome_email,omitempty"`
	// Deprecated: Text is not supported - The welcome text template.
	WelcomeText *Template `protobuf:"bytes,2,opt,name=welcome_text,json=welcomeText,proto3" json:"welcome_text,omitempty"`
	// The reset password email template.
	ResetPasswordEmail *Template `protobuf:"bytes,3,opt,name=reset_password_email,json=resetPasswordEmail,proto3" json:"reset_password_email,omitempty"`
	// Deprecated: Text is not supported - The reset password text template.
	ResetPasswordText *Template `protobuf:"bytes,4,opt,name=reset_password_text,json=resetPasswordText,proto3" json:"reset_password_text,omitempty"`
	// The email verification template.
	VerifyEmail *Template `protobuf:"bytes,5,opt,name=verify_email,json=verifyEmail,proto3" json:"verify_email,omitempty"`
	// Deprecated: Text is not supported - The text verification template.
	VerifyPhoneNumber *Template `protobuf:"bytes,6,opt,name=verify_phone_number,json=verifyPhoneNumber,proto3" json:"verify_phone_number,omitempty"`
}

func (x *Templates) Reset() {
	*x = Templates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Templates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Templates) ProtoMessage() {}

func (x *Templates) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Templates.ProtoReflect.Descriptor instead.
func (*Templates) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{15}
}

func (x *Templates) GetWelcomeEmail() *Template {
	if x != nil {
		return x.WelcomeEmail
	}
	return nil
}

func (x *Templates) GetWelcomeText() *Template {
	if x != nil {
		return x.WelcomeText
	}
	return nil
}

func (x *Templates) GetResetPasswordEmail() *Template {
	if x != nil {
		return x.ResetPasswordEmail
	}
	return nil
}

func (x *Templates) GetResetPasswordText() *Template {
	if x != nil {
		return x.ResetPasswordText
	}
	return nil
}

func (x *Templates) GetVerifyEmail() *Template {
	if x != nil {
		return x.VerifyEmail
	}
	return nil
}

func (x *Templates) GetVerifyPhoneNumber() *Template {
	if x != nil {
		return x.VerifyPhoneNumber
	}
	return nil
}

// The allowed login mechanisms
type Update_LoginMechanisms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginMechanisms []model.LoginType `protobuf:"varint,1,rep,packed,name=login_mechanisms,json=loginMechanisms,proto3,enum=model.LoginType" json:"login_mechanisms,omitempty"`
}

func (x *Update_LoginMechanisms) Reset() {
	*x = Update_LoginMechanisms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update_LoginMechanisms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update_LoginMechanisms) ProtoMessage() {}

func (x *Update_LoginMechanisms) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update_LoginMechanisms.ProtoReflect.Descriptor instead.
func (*Update_LoginMechanisms) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Update_LoginMechanisms) GetLoginMechanisms() []model.LoginType {
	if x != nil {
		return x.LoginMechanisms
	}
	return nil
}

// The user was created by the system.
type RegisterMethod_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterMethod_System) Reset() {
	*x = RegisterMethod_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMethod_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMethod_System) ProtoMessage() {}

func (x *RegisterMethod_System) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMethod_System.ProtoReflect.Descriptor instead.
func (*RegisterMethod_System) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{1, 0}
}

// The user was self-registered with a login-type.
type RegisterMethod_Signup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The login type used to register.
	LoginType model.LoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=model.LoginType" json:"login_type,omitempty"`
}

func (x *RegisterMethod_Signup) Reset() {
	*x = RegisterMethod_Signup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_user_settings_settings_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMethod_Signup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMethod_Signup) ProtoMessage() {}

func (x *RegisterMethod_Signup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_user_settings_settings_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMethod_Signup.ProtoReflect.Descriptor instead.
func (*RegisterMethod_Signup) Descriptor() ([]byte, []int) {
	return file_api_v1_user_settings_settings_proto_rawDescGZIP(), []int{1, 1}
}

func (x *RegisterMethod_Signup) GetLoginType() model.LoginType {
	if x != nil {
		return x.LoginType
	}
	return model.LoginType(0)
}

var File_api_v1_user_settings_settings_proto protoreflect.FileDescriptor

var file_api_v1_user_settings_settings_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x06, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x17, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3d, 0x0a,
	0x1a, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x17, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x10,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x74, 0x6c, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c, 0x12, 0x4f, 0x0a, 0x15,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x74, 0x6c, 0x12, 0x41, 0x0a,
	0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x0f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x12, 0x59, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x1a, 0x4e, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x45,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x1a, 0x08, 0x0a, 0x06,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x39, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x12, 0x2f, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x49, 0x0a, 0x0a, 0x41,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x8e, 0x06, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x73,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c, 0x12, 0x45, 0x0a, 0x11, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c,
	0x12, 0x4d, 0x0a, 0x15, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x74, 0x6c, 0x12,
	0x3f, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x12, 0x3b, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x57, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x4f, 0x0a, 0x0e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x61,
	0x69, 0x6c, 0x6a, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x10, 0x0a,
	0x0e, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x36, 0x0a, 0x0c, 0x53, 0x6d, 0x74, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x07,
	0x6d, 0x61, 0x69, 0x6c, 0x6a, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x6a, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x6a, 0x65, 0x74, 0x12,
	0x38, 0x0a, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x6d, 0x74, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x74, 0x77, 0x69,
	0x6c, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x54, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6c, 0x69, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0xc8, 0x03, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x43, 0x0a, 0x0d, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x0c, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x77, 0x65, 0x6c,
	0x63, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x12, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x13, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a,
	0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x88, 0x02,
	0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a,
	0x1b, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57,
	0x45, 0x4c, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x24,
	0x0a, 0x20, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a,
	0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45,
	0x4c, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x04, 0x12, 0x23, 0x0a, 0x1f,
	0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x06, 0x42, 0xd0, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x67, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x69, 0x67, 0x2d, 0x67, 0x6f,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0xa2, 0x02, 0x04, 0x41, 0x56, 0x55, 0x53,
	0xaa, 0x02, 0x14, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0xca, 0x02, 0x14, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31,
	0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0xe2, 0x02,
	0x20, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x17, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x55, 0x73, 0x65,
	0x72, 0x3a, 0x3a, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v1_user_settings_settings_proto_rawDescOnce sync.Once
	file_api_v1_user_settings_settings_proto_rawDescData = file_api_v1_user_settings_settings_proto_rawDesc
)

func file_api_v1_user_settings_settings_proto_rawDescGZIP() []byte {
	file_api_v1_user_settings_settings_proto_rawDescOnce.Do(func() {
		file_api_v1_user_settings_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_user_settings_settings_proto_rawDescData)
	})
	return file_api_v1_user_settings_settings_proto_rawDescData
}

var file_api_v1_user_settings_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_user_settings_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_v1_user_settings_settings_proto_goTypes = []any{
	(TemplateType)(0),                 // 0: api.v1.user.settings.TemplateType
	(*Update)(nil),                    // 1: api.v1.user.settings.Update
	(*RegisterMethod)(nil),            // 2: api.v1.user.settings.RegisterMethod
	(*AuthMethod)(nil),                // 3: api.v1.user.settings.AuthMethod
	(*Settings)(nil),                  // 4: api.v1.user.settings.Settings
	(*DefaultInstance)(nil),           // 5: api.v1.user.settings.DefaultInstance
	(*MailjetInstance)(nil),           // 6: api.v1.user.settings.MailjetInstance
	(*TwilioInstance)(nil),            // 7: api.v1.user.settings.TwilioInstance
	(*SmtpInstance)(nil),              // 8: api.v1.user.settings.SmtpInstance
	(*EmailInstance)(nil),             // 9: api.v1.user.settings.EmailInstance
	(*TextInstance)(nil),              // 10: api.v1.user.settings.TextInstance
	(*EmailProvider)(nil),             // 11: api.v1.user.settings.EmailProvider
	(*EmailProviderEntry)(nil),        // 12: api.v1.user.settings.EmailProviderEntry
	(*TextProvider)(nil),              // 13: api.v1.user.settings.TextProvider
	(*TextProviderEntry)(nil),         // 14: api.v1.user.settings.TextProviderEntry
	(*Template)(nil),                  // 15: api.v1.user.settings.Template
	(*Templates)(nil),                 // 16: api.v1.user.settings.Templates
	(*Update_LoginMechanisms)(nil),    // 17: api.v1.user.settings.Update.LoginMechanisms
	(*RegisterMethod_System)(nil),     // 18: api.v1.user.settings.RegisterMethod.System
	(*RegisterMethod_Signup)(nil),     // 19: api.v1.user.settings.RegisterMethod.Signup
	(*durationpb.Duration)(nil),       // 20: google.protobuf.Duration
	(*model.HashingConfig)(nil),       // 21: model.HashingConfig
	(model.LoginType)(0),              // 22: model.LoginType
	(*model.ProviderCredentials)(nil), // 23: model.ProviderCredentials
}
var file_api_v1_user_settings_settings_proto_depIdxs = []int32{
	20, // 0: api.v1.user.settings.Update.access_token_ttl:type_name -> google.protobuf.Duration
	20, // 1: api.v1.user.settings.Update.refresh_token_ttl:type_name -> google.protobuf.Duration
	20, // 2: api.v1.user.settings.Update.verification_code_ttl:type_name -> google.protobuf.Duration
	21, // 3: api.v1.user.settings.Update.password_hashing:type_name -> model.HashingConfig
	17, // 4: api.v1.user.settings.Update.login_mechanisms:type_name -> api.v1.user.settings.Update.LoginMechanisms
	11, // 5: api.v1.user.settings.Update.email_provider:type_name -> api.v1.user.settings.EmailProvider
	13, // 6: api.v1.user.settings.Update.text_provider:type_name -> api.v1.user.settings.TextProvider
	15, // 7: api.v1.user.settings.Update.template:type_name -> api.v1.user.settings.Template
	18, // 8: api.v1.user.settings.RegisterMethod.system:type_name -> api.v1.user.settings.RegisterMethod.System
	19, // 9: api.v1.user.settings.RegisterMethod.signup:type_name -> api.v1.user.settings.RegisterMethod.Signup
	22, // 10: api.v1.user.settings.AuthMethod.login_type:type_name -> model.LoginType
	20, // 11: api.v1.user.settings.Settings.access_token_ttl:type_name -> google.protobuf.Duration
	20, // 12: api.v1.user.settings.Settings.refresh_token_ttl:type_name -> google.protobuf.Duration
	20, // 13: api.v1.user.settings.Settings.verification_code_ttl:type_name -> google.protobuf.Duration
	21, // 14: api.v1.user.settings.Settings.password_hashing:type_name -> model.HashingConfig
	22, // 15: api.v1.user.settings.Settings.login_mechanisms:type_name -> model.LoginType
	12, // 16: api.v1.user.settings.Settings.email_provider:type_name -> api.v1.user.settings.EmailProviderEntry
	14, // 17: api.v1.user.settings.Settings.text_provider:type_name -> api.v1.user.settings.TextProviderEntry
	16, // 18: api.v1.user.settings.Settings.templates:type_name -> api.v1.user.settings.Templates
	5,  // 19: api.v1.user.settings.EmailInstance.default:type_name -> api.v1.user.settings.DefaultInstance
	6,  // 20: api.v1.user.settings.EmailInstance.mailjet:type_name -> api.v1.user.settings.MailjetInstance
	8,  // 21: api.v1.user.settings.EmailInstance.smtp:type_name -> api.v1.user.settings.SmtpInstance
	5,  // 22: api.v1.user.settings.TextInstance.default:type_name -> api.v1.user.settings.DefaultInstance
	7,  // 23: api.v1.user.settings.TextInstance.twilio:type_name -> api.v1.user.settings.TwilioInstance
	23, // 24: api.v1.user.settings.EmailProvider.credentials:type_name -> model.ProviderCredentials
	9,  // 25: api.v1.user.settings.EmailProvider.instance:type_name -> api.v1.user.settings.EmailInstance
	9,  // 26: api.v1.user.settings.EmailProviderEntry.instance:type_name -> api.v1.user.settings.EmailInstance
	23, // 27: api.v1.user.settings.TextProvider.credentials:type_name -> model.ProviderCredentials
	10, // 28: api.v1.user.settings.TextProvider.instance:type_name -> api.v1.user.settings.TextInstance
	10, // 29: api.v1.user.settings.TextProviderEntry.instance:type_name -> api.v1.user.settings.TextInstance
	0,  // 30: api.v1.user.settings.Template.type:type_name -> api.v1.user.settings.TemplateType
	15, // 31: api.v1.user.settings.Templates.welcome_email:type_name -> api.v1.user.settings.Template
	15, // 32: api.v1.user.settings.Templates.welcome_text:type_name -> api.v1.user.settings.Template
	15, // 33: api.v1.user.settings.Templates.reset_password_email:type_name -> api.v1.user.settings.Template
	15, // 34: api.v1.user.settings.Templates.reset_password_text:type_name -> api.v1.user.settings.Template
	15, // 35: api.v1.user.settings.Templates.verify_email:type_name -> api.v1.user.settings.Template
	15, // 36: api.v1.user.settings.Templates.verify_phone_number:type_name -> api.v1.user.settings.Template
	22, // 37: api.v1.user.settings.Update.LoginMechanisms.login_mechanisms:type_name -> model.LoginType
	22, // 38: api.v1.user.settings.RegisterMethod.Signup.login_type:type_name -> model.LoginType
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_api_v1_user_settings_settings_proto_init() }
func file_api_v1_user_settings_settings_proto_init() {
	if File_api_v1_user_settings_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_user_settings_settings_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AuthMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DefaultInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MailjetInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TwilioInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SmtpInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EmailInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TextInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*EmailProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EmailProviderEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TextProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TextProviderEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Templates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Update_LoginMechanisms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMethod_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_user_settings_settings_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterMethod_Signup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_user_settings_settings_proto_msgTypes[0].OneofWrappers = []any{
		(*Update_AllowRegister)(nil),
		(*Update_IsVerifiedEmailRequired)(nil),
		(*Update_IsVerifiedPhoneRequired)(nil),
		(*Update_AccessTokenTtl)(nil),
		(*Update_RefreshTokenTtl)(nil),
		(*Update_VerificationCodeTtl)(nil),
		(*Update_PasswordHashing)(nil),
		(*Update_LoginMechanisms_)(nil),
		(*Update_EmailProvider)(nil),
		(*Update_TextProvider)(nil),
		(*Update_Template)(nil),
	}
	file_api_v1_user_settings_settings_proto_msgTypes[1].OneofWrappers = []any{
		(*RegisterMethod_System_)(nil),
		(*RegisterMethod_Signup_)(nil),
	}
	file_api_v1_user_settings_settings_proto_msgTypes[2].OneofWrappers = []any{
		(*AuthMethod_LoginType)(nil),
	}
	file_api_v1_user_settings_settings_proto_msgTypes[8].OneofWrappers = []any{
		(*EmailInstance_Default)(nil),
		(*EmailInstance_Mailjet)(nil),
		(*EmailInstance_Smtp)(nil),
	}
	file_api_v1_user_settings_settings_proto_msgTypes[9].OneofWrappers = []any{
		(*TextInstance_Default)(nil),
		(*TextInstance_Twilio)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_user_settings_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_user_settings_settings_proto_goTypes,
		DependencyIndexes: file_api_v1_user_settings_settings_proto_depIdxs,
		EnumInfos:         file_api_v1_user_settings_settings_proto_enumTypes,
		MessageInfos:      file_api_v1_user_settings_settings_proto_msgTypes,
	}.Build()
	File_api_v1_user_settings_settings_proto = out.File
	file_api_v1_user_settings_settings_proto_rawDesc = nil
	file_api_v1_user_settings_settings_proto_goTypes = nil
	file_api_v1_user_settings_settings_proto_depIdxs = nil
}
