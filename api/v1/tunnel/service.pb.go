// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/v1/tunnel/service.proto

package tunnel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TunnelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *TunnelMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TunnelRequest) Reset() {
	*x = TunnelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelRequest) ProtoMessage() {}

func (x *TunnelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelRequest.ProtoReflect.Descriptor instead.
func (*TunnelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{0}
}

func (x *TunnelRequest) GetMessage() *TunnelMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type TunnelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *TunnelMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TunnelResponse) Reset() {
	*x = TunnelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelResponse) ProtoMessage() {}

func (x *TunnelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelResponse.ProtoReflect.Descriptor instead.
func (*TunnelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{1}
}

func (x *TunnelResponse) GetMessage() *TunnelMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type TunnelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*TunnelMessage_NewTunnel
	//	*TunnelMessage_Data
	//	*TunnelMessage_Close
	Message isTunnelMessage_Message `protobuf_oneof:"message"`
}

func (x *TunnelMessage) Reset() {
	*x = TunnelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelMessage) ProtoMessage() {}

func (x *TunnelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelMessage.ProtoReflect.Descriptor instead.
func (*TunnelMessage) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{2}
}

func (m *TunnelMessage) GetMessage() isTunnelMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *TunnelMessage) GetNewTunnel() *TunnelInfo {
	if x, ok := x.GetMessage().(*TunnelMessage_NewTunnel); ok {
		return x.NewTunnel
	}
	return nil
}

func (x *TunnelMessage) GetData() *TunnelData {
	if x, ok := x.GetMessage().(*TunnelMessage_Data); ok {
		return x.Data
	}
	return nil
}

func (x *TunnelMessage) GetClose() *TunnelClose {
	if x, ok := x.GetMessage().(*TunnelMessage_Close); ok {
		return x.Close
	}
	return nil
}

type isTunnelMessage_Message interface {
	isTunnelMessage_Message()
}

type TunnelMessage_NewTunnel struct {
	NewTunnel *TunnelInfo `protobuf:"bytes,1,opt,name=new_tunnel,json=newTunnel,proto3,oneof"`
}

type TunnelMessage_Data struct {
	Data *TunnelData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type TunnelMessage_Close struct {
	Close *TunnelClose `protobuf:"bytes,3,opt,name=close,proto3,oneof"`
}

func (*TunnelMessage_NewTunnel) isTunnelMessage_Message() {}

func (*TunnelMessage_Data) isTunnelMessage_Message() {}

func (*TunnelMessage_Close) isTunnelMessage_Message() {}

type TunnelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelId uint64 `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *TunnelInfo) Reset() {
	*x = TunnelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelInfo) ProtoMessage() {}

func (x *TunnelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelInfo.ProtoReflect.Descriptor instead.
func (*TunnelInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{3}
}

func (x *TunnelInfo) GetTunnelId() uint64 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *TunnelInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type TunnelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelId uint64 `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TunnelData) Reset() {
	*x = TunnelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelData) ProtoMessage() {}

func (x *TunnelData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelData.ProtoReflect.Descriptor instead.
func (*TunnelData) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{4}
}

func (x *TunnelData) GetTunnelId() uint64 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *TunnelData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TunnelClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelId uint64 `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Code     uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TunnelClose) Reset() {
	*x = TunnelClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tunnel_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelClose) ProtoMessage() {}

func (x *TunnelClose) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tunnel_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelClose.ProtoReflect.Descriptor instead.
func (*TunnelClose) Descriptor() ([]byte, []int) {
	return file_api_v1_tunnel_service_proto_rawDescGZIP(), []int{5}
}

func (x *TunnelClose) GetTunnelId() uint64 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *TunnelClose) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TunnelClose) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_v1_tunnel_service_proto protoreflect.FileDescriptor

var file_api_v1_tunnel_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x47, 0x0a, 0x0d,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xbb, 0x01, 0x0a, 0x0d, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a,
	0x0a, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3d, 0x0a, 0x0a,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x0b, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x56, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4b, 0x0a, 0x06, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0xa3, 0x01,
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x42, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x69, 0x67, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x69, 0x67, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0xa2,
	0x02, 0x03, 0x41, 0x56, 0x54, 0xaa, 0x02, 0x0d, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0xca, 0x02, 0x0d, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0xe2, 0x02, 0x19, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0f, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_tunnel_service_proto_rawDescOnce sync.Once
	file_api_v1_tunnel_service_proto_rawDescData = file_api_v1_tunnel_service_proto_rawDesc
)

func file_api_v1_tunnel_service_proto_rawDescGZIP() []byte {
	file_api_v1_tunnel_service_proto_rawDescOnce.Do(func() {
		file_api_v1_tunnel_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_tunnel_service_proto_rawDescData)
	})
	return file_api_v1_tunnel_service_proto_rawDescData
}

var file_api_v1_tunnel_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_v1_tunnel_service_proto_goTypes = []any{
	(*TunnelRequest)(nil),  // 0: api.v1.tunnel.TunnelRequest
	(*TunnelResponse)(nil), // 1: api.v1.tunnel.TunnelResponse
	(*TunnelMessage)(nil),  // 2: api.v1.tunnel.TunnelMessage
	(*TunnelInfo)(nil),     // 3: api.v1.tunnel.TunnelInfo
	(*TunnelData)(nil),     // 4: api.v1.tunnel.TunnelData
	(*TunnelClose)(nil),    // 5: api.v1.tunnel.TunnelClose
}
var file_api_v1_tunnel_service_proto_depIdxs = []int32{
	2, // 0: api.v1.tunnel.TunnelRequest.message:type_name -> api.v1.tunnel.TunnelMessage
	2, // 1: api.v1.tunnel.TunnelResponse.message:type_name -> api.v1.tunnel.TunnelMessage
	3, // 2: api.v1.tunnel.TunnelMessage.new_tunnel:type_name -> api.v1.tunnel.TunnelInfo
	4, // 3: api.v1.tunnel.TunnelMessage.data:type_name -> api.v1.tunnel.TunnelData
	5, // 4: api.v1.tunnel.TunnelMessage.close:type_name -> api.v1.tunnel.TunnelClose
	0, // 5: api.v1.tunnel.Service.Tunnel:input_type -> api.v1.tunnel.TunnelRequest
	1, // 6: api.v1.tunnel.Service.Tunnel:output_type -> api.v1.tunnel.TunnelResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_tunnel_service_proto_init() }
func file_api_v1_tunnel_service_proto_init() {
	if File_api_v1_tunnel_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_tunnel_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tunnel_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tunnel_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tunnel_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tunnel_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tunnel_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TunnelClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_tunnel_service_proto_msgTypes[2].OneofWrappers = []any{
		(*TunnelMessage_NewTunnel)(nil),
		(*TunnelMessage_Data)(nil),
		(*TunnelMessage_Close)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_tunnel_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_tunnel_service_proto_goTypes,
		DependencyIndexes: file_api_v1_tunnel_service_proto_depIdxs,
		MessageInfos:      file_api_v1_tunnel_service_proto_msgTypes,
	}.Build()
	File_api_v1_tunnel_service_proto = out.File
	file_api_v1_tunnel_service_proto_rawDesc = nil
	file_api_v1_tunnel_service_proto_goTypes = nil
	file_api_v1_tunnel_service_proto_depIdxs = nil
}
