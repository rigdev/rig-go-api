// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: model/common.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Bcrypt hashing configuration.
type BcryptHashingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cost of the hashing algorithm.
	Cost int32 `protobuf:"varint,1,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *BcryptHashingConfig) Reset() {
	*x = BcryptHashingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcryptHashingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcryptHashingConfig) ProtoMessage() {}

func (x *BcryptHashingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcryptHashingConfig.ProtoReflect.Descriptor instead.
func (*BcryptHashingConfig) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{0}
}

func (x *BcryptHashingConfig) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// Bcrypt hashing instance.
type BcryptHashingInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BcryptHashingInstance) Reset() {
	*x = BcryptHashingInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BcryptHashingInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcryptHashingInstance) ProtoMessage() {}

func (x *BcryptHashingInstance) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcryptHashingInstance.ProtoReflect.Descriptor instead.
func (*BcryptHashingInstance) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{1}
}

// Scrypt hashing configuration.
type ScryptHashingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key used to sign the salt.
	SignerKey string `protobuf:"bytes,1,opt,name=signer_key,json=signerKey,proto3" json:"signer_key,omitempty"`
	// The salt separator.
	SaltSeparator string `protobuf:"bytes,2,opt,name=salt_separator,json=saltSeparator,proto3" json:"salt_separator,omitempty"`
	// The number of rounds in the algorithm.
	Rounds int32 `protobuf:"varint,3,opt,name=rounds,proto3" json:"rounds,omitempty"`
	// The memory cost of the algorithm.
	MemCost int32 `protobuf:"varint,4,opt,name=mem_cost,json=memCost,proto3" json:"mem_cost,omitempty"`
	// The parallelization factor of the algorithm.
	P int32 `protobuf:"varint,5,opt,name=p,proto3" json:"p,omitempty"`
	// The length of the key.
	KeyLen int32 `protobuf:"varint,6,opt,name=key_len,json=keyLen,proto3" json:"key_len,omitempty"`
}

func (x *ScryptHashingConfig) Reset() {
	*x = ScryptHashingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScryptHashingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScryptHashingConfig) ProtoMessage() {}

func (x *ScryptHashingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScryptHashingConfig.ProtoReflect.Descriptor instead.
func (*ScryptHashingConfig) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{2}
}

func (x *ScryptHashingConfig) GetSignerKey() string {
	if x != nil {
		return x.SignerKey
	}
	return ""
}

func (x *ScryptHashingConfig) GetSaltSeparator() string {
	if x != nil {
		return x.SaltSeparator
	}
	return ""
}

func (x *ScryptHashingConfig) GetRounds() int32 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

func (x *ScryptHashingConfig) GetMemCost() int32 {
	if x != nil {
		return x.MemCost
	}
	return 0
}

func (x *ScryptHashingConfig) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *ScryptHashingConfig) GetKeyLen() int32 {
	if x != nil {
		return x.KeyLen
	}
	return 0
}

// Scrypt hashing instance.
type ScryptHashingInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The salt used to hash the password.
	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *ScryptHashingInstance) Reset() {
	*x = ScryptHashingInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScryptHashingInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScryptHashingInstance) ProtoMessage() {}

func (x *ScryptHashingInstance) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScryptHashingInstance.ProtoReflect.Descriptor instead.
func (*ScryptHashingInstance) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{3}
}

func (x *ScryptHashingInstance) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

// Hashing configuration.
type HashingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Method:
	//
	//	*HashingConfig_Bcrypt
	//	*HashingConfig_Scrypt
	Method isHashingConfig_Method `protobuf_oneof:"method"`
}

func (x *HashingConfig) Reset() {
	*x = HashingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashingConfig) ProtoMessage() {}

func (x *HashingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashingConfig.ProtoReflect.Descriptor instead.
func (*HashingConfig) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{4}
}

func (m *HashingConfig) GetMethod() isHashingConfig_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *HashingConfig) GetBcrypt() *BcryptHashingConfig {
	if x, ok := x.GetMethod().(*HashingConfig_Bcrypt); ok {
		return x.Bcrypt
	}
	return nil
}

func (x *HashingConfig) GetScrypt() *ScryptHashingConfig {
	if x, ok := x.GetMethod().(*HashingConfig_Scrypt); ok {
		return x.Scrypt
	}
	return nil
}

type isHashingConfig_Method interface {
	isHashingConfig_Method()
}

type HashingConfig_Bcrypt struct {
	// if bcrypt is set, use bcrypt.
	Bcrypt *BcryptHashingConfig `protobuf:"bytes,1,opt,name=bcrypt,proto3,oneof"`
}

type HashingConfig_Scrypt struct {
	// if scrypt is set, use scrypt.
	Scrypt *ScryptHashingConfig `protobuf:"bytes,2,opt,name=scrypt,proto3,oneof"`
}

func (*HashingConfig_Bcrypt) isHashingConfig_Method() {}

func (*HashingConfig_Scrypt) isHashingConfig_Method() {}

// Hashing instance.
type HashingInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The hashing configuration.
	Config *HashingConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// A hash
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// Types that are assignable to Instance:
	//
	//	*HashingInstance_Bcrypt
	//	*HashingInstance_Scrypt
	Instance isHashingInstance_Instance `protobuf_oneof:"instance"`
}

func (x *HashingInstance) Reset() {
	*x = HashingInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashingInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashingInstance) ProtoMessage() {}

func (x *HashingInstance) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashingInstance.ProtoReflect.Descriptor instead.
func (*HashingInstance) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{5}
}

func (x *HashingInstance) GetConfig() *HashingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *HashingInstance) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (m *HashingInstance) GetInstance() isHashingInstance_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (x *HashingInstance) GetBcrypt() *BcryptHashingInstance {
	if x, ok := x.GetInstance().(*HashingInstance_Bcrypt); ok {
		return x.Bcrypt
	}
	return nil
}

func (x *HashingInstance) GetScrypt() *ScryptHashingInstance {
	if x, ok := x.GetInstance().(*HashingInstance_Scrypt); ok {
		return x.Scrypt
	}
	return nil
}

type isHashingInstance_Instance interface {
	isHashingInstance_Instance()
}

type HashingInstance_Bcrypt struct {
	// if bcrypt is set, this bcrypt instance was used.
	Bcrypt *BcryptHashingInstance `protobuf:"bytes,3,opt,name=bcrypt,proto3,oneof"`
}

type HashingInstance_Scrypt struct {
	// if scrypt is set, this scrypt instance was used.
	Scrypt *ScryptHashingInstance `protobuf:"bytes,4,opt,name=scrypt,proto3,oneof"`
}

func (*HashingInstance_Bcrypt) isHashingInstance_Instance() {}

func (*HashingInstance_Scrypt) isHashingInstance_Instance() {}

// Pagination option.
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Where to start the pagination.
	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// How many items to return.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Whether to sort in descending order.
	Descending bool `protobuf:"varint,3,opt,name=descending,proto3" json:"descending,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_model_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_model_common_proto_rawDescGZIP(), []int{6}
}

func (x *Pagination) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

var File_model_common_proto protoreflect.FileDescriptor

var file_model_common_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x29, 0x0a, 0x13, 0x42,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x42, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xb5, 0x01, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x74, 0x5f, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x61, 0x6c, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xcf, 0x01, 0x0a,
	0x0f, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x5a,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x70, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x67, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x69, 0x67, 0x2d, 0x67, 0x6f,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58,
	0xaa, 0x02, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xca, 0x02, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0xe2, 0x02, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_common_proto_rawDescOnce sync.Once
	file_model_common_proto_rawDescData = file_model_common_proto_rawDesc
)

func file_model_common_proto_rawDescGZIP() []byte {
	file_model_common_proto_rawDescOnce.Do(func() {
		file_model_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_common_proto_rawDescData)
	})
	return file_model_common_proto_rawDescData
}

var file_model_common_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_model_common_proto_goTypes = []interface{}{
	(*BcryptHashingConfig)(nil),   // 0: model.BcryptHashingConfig
	(*BcryptHashingInstance)(nil), // 1: model.BcryptHashingInstance
	(*ScryptHashingConfig)(nil),   // 2: model.ScryptHashingConfig
	(*ScryptHashingInstance)(nil), // 3: model.ScryptHashingInstance
	(*HashingConfig)(nil),         // 4: model.HashingConfig
	(*HashingInstance)(nil),       // 5: model.HashingInstance
	(*Pagination)(nil),            // 6: model.Pagination
}
var file_model_common_proto_depIdxs = []int32{
	0, // 0: model.HashingConfig.bcrypt:type_name -> model.BcryptHashingConfig
	2, // 1: model.HashingConfig.scrypt:type_name -> model.ScryptHashingConfig
	4, // 2: model.HashingInstance.config:type_name -> model.HashingConfig
	1, // 3: model.HashingInstance.bcrypt:type_name -> model.BcryptHashingInstance
	3, // 4: model.HashingInstance.scrypt:type_name -> model.ScryptHashingInstance
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_model_common_proto_init() }
func file_model_common_proto_init() {
	if File_model_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcryptHashingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BcryptHashingInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScryptHashingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScryptHashingInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashingInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_common_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*HashingConfig_Bcrypt)(nil),
		(*HashingConfig_Scrypt)(nil),
	}
	file_model_common_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*HashingInstance_Bcrypt)(nil),
		(*HashingInstance_Scrypt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_common_proto_goTypes,
		DependencyIndexes: file_model_common_proto_depIdxs,
		MessageInfos:      file_model_common_proto_msgTypes,
	}.Build()
	File_model_common_proto = out.File
	file_model_common_proto_rawDesc = nil
	file_model_common_proto_goTypes = nil
	file_model_common_proto_depIdxs = nil
}
